[{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/data-handling.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Data handling","text":"workflow modeling simulation involves running simulations comparing simulated data observed data. Functionalities esqlabsR require observed data present DataSet objects. Please refer article Observed data information load data Excel *.pkml files. esqlabsR offers convenience function loadObservedData() facilitates loading data standard esqLABS projects. Assuming standard project folder structure followed valid ProjectConfiguration (see Standard workflow) Excel files observed data present projectConfiguration$dataFolder folder, following code loads data: function loads data file projectConfiguration$dataFile folder projectConfiguration$dataFolder returns list DataSet objects. resulting object used later plot results compare simulated observed data.","code":"projectConfiguration <- createDefaultProjectConfiguration() dataSheets <- \"Laskin 1982.Group A\" observedData <- loadObservedData(   projectConfiguration = projectConfiguration,   sheets = dataSheets )  print(names(observedData)) #> [1] \"Aciclovir_Laskin 1982.Group A_1_Human_PeripheralVenousBlood_Plasma_2.5 mg/kg_iv\""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/data-handling.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Data handling","text":"sheets argument loadObservedData() function string list strings. specified sheet found file, omitted warning; observedData variable may empty named list. data file specified projectConfiguration$dataFile missing filesystem, loadObservedData() function fail Invalid File message. detailed information function signatures can found : createDefaultProjectConfiguration() ProjectConfiguration class loadObservedData() DataImporterConfiguration class createImporterConfigurationForFile() loadDataImporterConfiguration() DataSet class dataSetToDataFrame() loadDataSetsFromExcel() loadDataSetFromPKML() saveDataSetToPKML()","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/introduction-esqlabsr.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Introduction to esqlabsR","text":"package builds functionality ospsuite package. strongly recommended get familiar R Introduction. Functions reference ospsuite can found , articles describing usage package examples found . order load simulation R, must present *.pkml file format. Every simulation PK-Sim MoBi can exported *.pkml file. examples shown documentation based Aciclovir example model, stated otherwise. model can found GitHub repository PK-Sim project. pkml file can downloaded ospsuite-r repository. articles cover several aspects software usage: Standard workflow Data handling Visualization reporting Sensitivity analysis Available Shiny apps","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/introduction-esqlabsr.html","id":"object-oriented-approach","dir":"Articles","previous_headings":"","what":"Object-oriented approach","title":"Introduction to esqlabsR","text":"esqlabsR package utilizes concept object-oriented (OO) programming based R6 system. philosophy package offer functional programming workflow common R users, important understand basic concepts OO programming. Many functions implemented esqlabsR return instance (object) class. objects can used inputs fopkgr methods. Additionally, object offers set properties (can objects) methods, accessible $ character: Important information object can printed calling print(object).","code":"# create an instance of an object object1 <- ClassName$new()  # extract a property associated with this object aProperty <- object1$property1  # apply a method associated with this object resultOfAFunction <- object1$multiply(1,2)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/introduction-esqlabsr.html","id":"configuring-a-project-with-no-code-excel-files","dir":"Articles","previous_headings":"","what":"Configuring a project with no-code Excel files","title":"Introduction to esqlabsR","text":"facilitate modeling activities team diverse backgrounds, esqlabsR employs Excel configuration files define every aspect modeling project. modeling projects expected follow strict folder structure: Code/ProjectConfiguration.xlsx file cornerstone Excel file stores relative paths project components, including modeling scenarios, data files parameter files. Excel file expected contain fields populate instance ProjectConfiguration class. default, Code folder contains R script files default, Data folder contains Excel files observed data default, Parameters folder contains Excel files global, population individual model parameters, definitions application protocols modeling scenarios. exemplary project folder including subfolders files mentioned can found /tests/data/TestProject folder {esqlabsr} repository.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/sensitivity-analysis.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Sensitivity analysis","text":"Sensitivity analysis quantifies pharmacokinetics drug changes variation simulation parameters. important track values simulation parameters uncertain. information sensitivity analysis mathematical background provided OSPS documentation section Sensitivity Analysis. aciclovir simulation example, lipophilicity aciclovir assumed -0.097 log units. sensitivity analysis, want quantify much pharmacokinetic parameters change lipophilicity aciclovir varied certain factors. sensitivityCalculation() function esqlabsR package re-running simulation set updated parameter values. default, specified parameter multiplied 0.1, 0.2, 0.3, …, 1, 2, 3, … 10, value simulation run. factors can customized variationRange argument. function returns list output paths sensitivity calculated, paths parameters varied, SimulationResults object, data frame calculated PK parameters input parameter values. aciclovir example case, default value lipophilicity -0.097 log units, corresponding area curve (AUC) 3915.87 µmol×min/L. Increasing lipophilicity -0.0097 log units leads decrease AUC 3895.43 µmol×min/L (change -0.52%), decreasing lipophilicity -0.97 log units leads increase AUC 4015.73 µmol×min/L (change 2.55%). sensitivity AUC 10-fold increase lipophilicity calculated \\[\\frac{\\Delta AUC}{\\Delta lipophilicity} \\times \\frac{lipophilicity}{AUC}=\\frac{4015.73-3915.87}{-0.97--0.097} \\times \\frac{-0.97}{4015.73}=0.027\\] results sensitivity analysis can plotted two functions: sensitivitySpiderPlot() function generate separate plot PK parameters investigation. default, sensitivityCalculation() function computes changes area curve (AUC_inf), maximum concentration (C_max), time maximum concentration reached (t_max).  sensitivityTimeProfiles() function plots concentration profile input parameter values:","code":"simulation <- simulatedScenarios$TestScenario$simulation OutputPaths <- enum(list(   Aciclovir_PVB = \"Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)\" )) analysis <- sensitivityCalculation(simulation, OutputPaths, parameterPaths = \"Aciclovir|Lipophilicity\") head(analysis$pkData) #> # A tibble: 6 × 9 #>   OutputPath            ParameterPath ParameterFactor ParameterValue PKParameter #>   <chr>                 <chr>                   <dbl>          <dbl> <chr>       #> 1 Organism|PeripheralV… Aciclovir|Li…             0.1        -0.0097 AUC_inf     #> 2 Organism|PeripheralV… Aciclovir|Li…             0.2        -0.0194 AUC_inf     #> 3 Organism|PeripheralV… Aciclovir|Li…             0.3        -0.0291 AUC_inf     #> 4 Organism|PeripheralV… Aciclovir|Li…             0.4        -0.0388 AUC_inf     #> 5 Organism|PeripheralV… Aciclovir|Li…             0.5        -0.0485 AUC_inf     #> 6 Organism|PeripheralV… Aciclovir|Li…             0.6        -0.0582 AUC_inf     #> # ℹ 4 more variables: PKParameterValue <dbl>, Unit <chr>, #> #   PercentChangePK <dbl>, SensitivityPKParameter <dbl> sensitivitySpiderPlot(analysis) #> [1] \"Creating plot for path: Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)\" sensitivityTimeProfiles(analysis) #> [1] \"Creating plot for path: Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)\""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/sensitivity-analysis.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Sensitivity analysis","text":"SensitivityPKParameter column output analysis$pkData NA rows corresponding initial parameter values (.e., multiplication factor 1). detailed information function signatures can found : sensitivityCalculation() sensitivitySpiderPlot() sensitivityTimeProfiles()","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/shiny-apps.html","id":"function-visualizer","dir":"Articles","previous_headings":"","what":"Function Visualizer","title":"Using the esqlabsR Shiny apps","text":"Function Visualizer allows users easily plot chosen mathematical function different parameter values add data points comparison. function can entered Equation field. must defined according R syntax can include standard arithmetic operators -, +, *, /, %% %/% well functions exp, log, sin, exp, cos, tan, sqrt, floor, ceiling constant pi. setting function, user must select argument (independent variable) Argument field define (constant) values remaining parameter (either slider respective current input field). curve current parameter settings can permanently added output plot (Add snapshot button) compare parameter settings. can zoom plot changing axis limits. Displaying curves different parameter settings Data points can added graph Add single points plot section plot, displayed + symbol output. Another option adding multiple data points uploading data xls/xlsx file. columns x y values, well label data appear legend plot, can chosen pop-window. Pop-window adding data xls/xlsx files","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/shiny-apps.html","id":"unit-converter","dir":"Articles","previous_headings":"","what":"Unit Converter","title":"Using the esqlabsR Shiny apps","text":"Unit Converter app provides graphical interface use toUnit() function. First, choose Dimension dropdown menu, , choose input output units, type value converted. tool also allows convert Concentration Amount quantities, e. g. mol/l mg/l. , molecular weight value g/mol must provided respective field. cases, field deactivated. Example input Unit Converter app","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"simulation-workflow","dir":"Articles","previous_headings":"","what":"Simulation workflow","title":"Standard workflow","text":"Within esqlabsR framework, simulations run defining executing multiple scenarios. scenario defined simulation file containing model structure, parametrization model, application protocol, (optionally) physiology simulated individual population. simplify scenarios set , information stored excel files defined structure. package includes example scenario models administration single dose 250 mg aciclovir intravenously individual 90 ml/min estimated glomerular filtration rate. step wise approach setting new simulation scenario shown Figure 1, detailed description excel files structures R code given Configuration files structure section. Figure 1: Workflow scenario set ","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"project-configuration","dir":"Articles","previous_headings":"Simulation workflow","what":"Project configuration","title":"Standard workflow","text":"Information location scenario definition files, simulation files, output folders etc. stored excel file ProjectConfiguration.xlsx located folder Code. Usually required edit contents file. first step workflow create ProjectConfiguration file used scripts know find required data (following examples, assume current working directory Code folder): required, can change location one files folders:","code":"projectConfiguration <- createDefaultProjectConfiguration() print(projectConfiguration) #> ProjectConfiguration:  #>    Model folder: ../Models/Simulations  #>    Parameters folder: ../Parameters  #>    Parameters file name: ModelParameters.xlsx  #>    Individual parameters file name: Individuals.xlsx  #>    Population parameters file name: PopulationParameters.xlsx  #>    Scenario definitions file name: Scenarios.xlsx  #>    Scenario applications definitions file name: ApplicationParameters.xlsx  #>    Plot definitions file name: Plots.xlsx  #>    Experimental data folder: ../Data  #>    Experimental data file: TestProject_TimeValuesData.xlsx  #>    Data importer configuration: esqlabs_dataImporter_configuration.xml  #>    Output folder: ../Results #change the location of the output folder  projectConfiguration$outputFolder <- \"../anotherOutputFolder\"  #change the location of the model parameters file projectConfiguration$modelParametersFile <- \"../anotherModelParameters.xlsx\""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"add-new-scenario","dir":"Articles","previous_headings":"Simulation workflow","what":"Add new scenario","title":"Standard workflow","text":"model developed PK-Sim /MoBi, simulation must stored .pkml file Models/Simulations folder. set simulation/scenario R, open file Scenarios.xlsx located folder Parameters. Start defining scenario giving name Scenario_name column. Scenario name used later retrieve simulation results use e.g. figure definitions. Specify simulation *.pkml file use column ModelFile. simply want run simulation settings exported PK-Sim MoBi, can proceed running Scenarios section.","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"simulation-parameters","dir":"Articles","previous_headings":"Simulation workflow > Customize the scenario","what":"4. Simulation Parameters","title":"Standard workflow","text":"can define simulation parameters ModelParameters.xlsx file. order apply simulation, need specify sheets load ModelParameterSheets column Scenarios.xlsx file.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"individuals","dir":"Articles","previous_headings":"Simulation workflow > Customize the scenario","what":"5. Individuals","title":"Standard workflow","text":"want simulate specific individual individual characteristics (age, weight, etc.) apply individual model parameter values simulation, define individual IndividualId column. create new individual entry Individuals.xlsx file. create new individual specific biometrics, create new row IndividualBiometrics sheet. define individual-specific parametrization, create new sheet name ID individual.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"population","dir":"Articles","previous_headings":"Simulation workflow > Customize the scenario","what":"6. Population","title":"Standard workflow","text":"want run population simulation, specify population column PopulationId. want create new population time run scenario, define population demographics Demographics sheet PopulationParameters.xlsx file. Keep mind simulation results might differ time run scenario, new population generated time! want import population existing csv file, set value ReadPopulationFromCSV column TRUE. population csv file must located Parameters/Populations folder.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"time","dir":"Articles","previous_headings":"Simulation workflow > Customize the scenario","what":"7. Time","title":"Standard workflow","text":"Simulation time can also changed SimulationTime SimulationTimeUnit columns.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"outputpath","dir":"Articles","previous_headings":"Simulation workflow > Customize the scenario","what":"8. OutputPath","title":"Standard workflow","text":"can define outputs simulation OutputPathsIds column. convenience, full paths outputs must listed, acronyms. full path acronym must defined sheet OutputPaths.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"administration-protocols","dir":"Articles","previous_headings":"Simulation workflow > Customize the scenario","what":"9. Administration Protocols","title":"Standard workflow","text":"Finally, can simulate different administration protocols simulation file defining application protocol column ApplicationProtocol. See description .","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"files-structure","dir":"Articles","previous_headings":"","what":"Configuration files structure","title":"Standard workflow","text":"relevant excel files definition scenarios : - ApplicationParameters.xlsx - Individuals.xlsx - ModelParameters.xlsx - PopulationParameters.xlsx - Scenarios.xlsx Scenarios sheet Scenarios.xlsx file following structure: Scenario_name unique name scenario. name must valid R variables name. IndividualId Name (ID) individual. name refers name individual used excel file Individuals.xlsx definition biometric properties (sheet IndividualBiometrics) simulated individual individual-specific model parameters. latter, create separate sheet Individuals.xlsx files sheet name IndividualId. structure sheets structure sheets ModelParameter.xlsx file, see decription . IndividualId may empty. case, individual defined pkml simulation without individual-specific model parameters simulated.individual can used multiple scenarios. possible scale human model species Rat, Rabbit, Monkey applying respective individual simulation. species scalings technically possible correctness results guaranteed exist structural differences species. PopulationId Name (ID) population. empty, scenario simulated individual simulation. Otherwise, population simulation performed. column ReadPopulationFromCSV set FALSE, PopulationId refers name o f population defined sheet Demographics file PopulationParameters.xlsx. create population specific demographic characteristics, define entry population id Demographics. population can used multiple scenarios. column ReadPopulationFromCSV s et TRUE, population imported csv file located folder Parameters/Populations, name file must id population. Note: can define IndividualId PopulationId. t case, individual-specific parameters IndividualParameters.xlsx applied simulation prior applying population parameters. Keep mind, physiological parameters defined individual also part parameter set population overwritten population! e.g. specify GFR individual IndividualParameters.xlsx, overwritten GFR values sampled simulation. ModelParameterSheets list sheet names ModelParameter.xlsx file, separated ,. sheet must columns Container Path, Parameter Name, Value, Units. Parameter values specified sheets applied model order definition. E.g., define Global, Aciclovir, parameters Aciclovir sheet applied Global parameters. ModelParameterSheets may empty specify many sheets required. Note specified sheets must present ModelParameter.xlsx file. purpose approach global parameters can applied scenarios, separate set parameters e.g. different disease states (parameter sheets Healthy CKD), separate parametrization different compounds (sheet Aciclovir). can refine parametrization scenario specifying individual parameters IndividualParameters.xlsx file. Create sheet name IndividualId specified respective scenario structure ModelParameters.xlsx file. way can define e.g. individual-specific clearance values , example case, glomerular filtration rate. Individual specific parameters applied parameters defined ModelParameterSheets. can use individual multiple scenarios. individual specified scenario definition, sheet name exists IndividualParameters.xlsx file, step simply ignored. ApplicationProtocol Name application protocol applied. Applications defined set parameters applied model file ApplicationParameters.xlsx. application, create sheet name specified ApplicationProtocol entry populate structure ModelParameter.xlsx file. Configuring application protocols way requires loaded simulation includes possible applications can turned setting parameters, e.g. Dose Start time parameters. might cumbersome manually create entries administration parameters, can use getAllApplicationParameters() function get list (constant) parameters located Applications container. following example, extract application parameters molecule Aciclovir example simulation: export parameters excel file using exportParametersToXLS() function: created excel file structure Parameter-files can directly loaded MoBi R using readParametersFromXLS() function. SimulationTime: Time simulation. output interval simulation set range [0 - SimulationTime] resolution 1 point per minute. SimulationTimeUnit: Unit SimulationTime. supported units, see ospsuite::ospUnits. SteadyState: TRUE, model simulated “sufficiently long” time (1000 minutes default). SteadyStateTime: Time steady-state. SteadyStateTimeUnit: Unit SteadyStateTime. supported units, see ospsuite::ospUnits. ModelFile: Name pkml file simulation. Must located folder defined ProjectConfiguration$modelFolder. OutputPathsIds: Paths model outputs (.e., paths molecules/ parameters outputs simulated) can defined sheet OutputPaths. Create entry output path entering full path column OutputPath defining unique identifier path column OutputPathId. content sheet look like : Scenarios sheet, enter IDs paths outputs generated , separated comma, e.g. Aciclovir_PVB, Aciclovir_fat_cell.","code":"sim <- loadSimulation(system.file(\"extdata\", \"Aciclovir.pkml\", package = \"ospsuite\")) applicationParams <- getAllApplicationParameters(sim) print(applicationParams) #> [[1]] #> Parameter:  #>    Path: Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Start time  #>    Value: 0.00 [min]  #>    isConstant: TRUE  #>    isStateVariable: FALSE  #>  #> [[2]] #> Parameter:  #>    Path: Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose  #>    Value: 0.00 [kg]  #>    isConstant: TRUE  #>    isStateVariable: FALSE  #>  #> [[3]] #> Parameter:  #>    Path: Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|DosePerBodySurfaceArea  #>    Value: 0.00 [kg/dm²]  #>    isConstant: TRUE  #>    isStateVariable: FALSE  #>  #> [[4]] #> Parameter:  #>    Path: Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|DosePerBodyWeight  #>    Value: 0.00 [kg/kg]  #>    isConstant: TRUE  #>    isStateVariable: FALSE  #>  #> [[5]] #> Parameter:  #>    Path: Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Infusion time  #>    Value: 10.00 [min]  #>    isConstant: TRUE  #>    isStateVariable: FALSE exportParametersToXLS(parameters = applicationParams, paramsXLSpath = \"../Applications.xlsx\")"},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"code-based-specifications","dir":"Articles","previous_headings":"","what":"Code-based specifications","title":"Standard workflow","text":"addition scenario setups excel sheets, specifications made R files located InputCode project folder. Files folder must sourced prior using. TestParameters: model development/fitting phase, might want test parameter values storing Parameters excel files. can define paths parameters, values units TestParameters file. Remember source file time change values. can turn setting test parameters ScenarioConfiguration (see Section Running scenarios).","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"custom-functions","dir":"Articles","previous_headings":"","what":"Custom functions","title":"Standard workflow","text":"Initialization scenario creates Simulation object fully parametrized according specifications scenario. However, sometimes modifications simulations required represented fixed parameter values stored excel files. Imagine scenario value certain parameter depends parameters known time point excel file creation. Another use case dose escalation study. Instead defining every dose separate **ApplicationProtocol” sheet, set doses simulate defined R list passed argument function sets dose parameter scenario. can achieved defining function applied Simulation object created ScenarioConfiguration last step initialization. function can reference simulation variable accept additional arguments. argument values defined field customFunctionArgs. following example, define custom function multiplies Dose parameter certain factor. path dose parameter multiplication factor defined arguments.","code":"# Create `ScenarioConfiguration` objects from excel files scenarioConfigurations <- readScenarioConfigurationFromExcel(   scenarioNames = \"TestScenario\",   projectConfiguration = projectConfiguration )  # Path to the dose parameter doseParamPath <- \"Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose\"  # Initialize the simulation from the scenario without a custom function sim <- initializeScenario(scenarioConfigurations[[1]]) # get the value of dose parameter oldVal <- getQuantityValuesByPath(doseParamPath, sim) print(paste0(\"Default dose parameter value: \", oldVal)) #> [1] \"Default dose parameter value: 0.00025\"  # Define a custom function customFunction <- function(doseFactor, doseParamPath) {   doseParam <- getParameter(     path = doseParamPath,     container = simulation   )   doseParam$value <- doseParam$value * doseFactor }  # Add the custom function to the scenario  scenarioConfigurations$TestScenario$customFunction <- customFunction  # Set the values of the arguments scenarioConfigurations$TestScenario$customFunctionArgs <- list(   doseFactor = 2,   doseParamPath = doseParamPath )  # Initialize the simulation with the scenario with the custom function and get # the value of the dose parameter. sim <- initializeScenario(scenarioConfigurations[[1]])  print(paste0(\"Dose parameter value with custom function: \", getQuantityValuesByPath(doseParamPath, sim))) #> [1] \"Dose parameter value with custom function: 5e-04\""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"scenario-parametrization-hierarchy","dir":"Articles","previous_headings":"","what":"Scenario parametrization hierarchy","title":"Standard workflow","text":"final parametrization combination different parametrization steps defined various levels, described section . following figure summarizes hierarchy parametrization. Parametrization sequence parameter path defined multiple steps, value overwritten subsequent steps. means, individual parameter values overwrite values defined “ModelParameters.xlsx” file, parameters defined customParams argument runScenarios() function overwrite everything else. order parameter sheets “ModelParameters.xlsx” file defined ModelParameterSheets column define order parameters applied.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"running-scenarios","dir":"Articles","previous_headings":"","what":"Running scenarios","title":"Standard workflow","text":"Scenarios executed creating ScenarioConfiguration objects calling runScenarios()function. Though possible create empty ScenarioConfiguration populate hand, usually want create scenario configurations excel files calling readScenarioConfigurationFromExcel() function. ScenarioConfiguration based ProjectConfiguration, provided argument function. read configuration ‘TestScenario’ scenario defined Scenarios.xlsx file, call Alternatively, can create configurations scenarios defined Scenarios.xlsx calling readScenarioConfigurationFromExcel(projectConfiguration = projectConfiguration) without specifying scenarios’ names. running scenarios, can modify ScenarioConfigurations setting parameters currently accessible excel files. model development/fitting phase, might want apply test parameter values: Make sure sourced TestParameters file case. scenario configurations set , can simulate calling runScenarios() function. can specify save initialized simulation (.e. simulation individual physiology parametrization applied defined scenario configuration). case, folder current date time created folder simulation pkml files located. good idea store simulation results *.csv along simulations .*pkml , optionally, used population *.scv file load processing avoid re-simulating every time e.g. change figure showing simulation results required. convenient function saving results scenario run saveScenarioResults(). futher information, check documentation functions saveScenarioResults() loadScenarioResults(). function returns results simulations. scenario, Simulation object, SimulationResults object, vectors output values (retrieved getOutputValues() function) returned.","code":"# Create `ScenarioConfiguration` objects from excel files scenarioConfigurations <- readScenarioConfigurationFromExcel(   scenarioNames = \"TestScenario\",   projectConfiguration = projectConfiguration )  print(scenarioConfigurations$TestScenario) #> ProjectConfiguration:  #>    Model folder: ../Models/Simulations  #>    Parameters folder: ../Parameters  #>    Parameters file name: ModelParameters.xlsx  #>    Individual parameters file name: Individuals.xlsx  #>    Population parameters file name: PopulationParameters.xlsx  #>    Scenario definitions file name: Scenarios.xlsx  #>    Scenario applications definitions file name: ApplicationParameters.xlsx  #>    Plot definitions file name: Plots.xlsx  #>    Experimental data folder: ../Data  #>    Experimental data file: TestProject_TimeValuesData.xlsx  #>    Data importer configuration: esqlabs_dataImporter_configuration.xml  #>    Output folder: ../Results  #> ScenarioConfiguration:  #>    Model file name: Aciclovir.pkml  #>    Scenario name: TestScenario  #>    Parameters sheets: Global  #>    Individual Id: Indiv1  #>    Population Id:  #>    Read population from csv file: FALSE  #>    Application protocol: Aciclovir_iv_250mg  #>    Simulation time: 1440  #>    Points per minute: 1  #>    Simulate steady-state: FALSE  #>    Steady-state time: 1000  #>    Set test parameters: FALSE # Set output paths for each scenario for (scenarioConfiguration in scenarioConfigurations) {   scenarioConfiguration$setTestParameters <- TRUE } simulatedScenarios <- runScenarios(   scenarioConfigurations = scenarioConfigurations,   customParams = NULL, saveSimulationsToPKML = FALSE )  names(simulatedScenarios) #> [1] \"TestScenario\""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/standard-workflow.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Standard workflow","text":"detailed information function signatures can found : ProjectConfiguration class ScenarioConfiguration class readScenarioConfigurationFromExcel() runScenarios()","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/visualization-and-reporting.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Visualization and reporting","text":"Plotting simulation results important part model diagnostics quality control. Simulated modeling scenarios can passed plotting functions ospsuite package create uniformly-looking plots. get familiar DataCombined class used store matching observed simulated data, read Working DataCombined class article. article Visualizations DataCombined covers basics create supported plot types customize . following examples, simulate example scenario described Standard workflow load corresponding observed data described Data handling. simulation results stored list returned runScenarios() function. Plotting visualization performed storing results along matching observed data DataCombined object passing plotting functions. Observed data form DataSet objects added DataCombined object via addDataSets() function, simulated results can added using addSimulationResults() function. Observed simulated data can linked setting groups argument methods. Data sets group plotted together calling plotting functions DataCombined object. Let’s create DataCombined object populate data following code: Customization generated figures - specifying title, axes ranges, axes units, position legend, etc., done plot configurations - objects class DefaultPlotConfiguration. combine multiple plots multi-panel figure, create PlotGridConfiguration object, add plots , plot plotGrid() method. Finally, export plot file (e.g., PNG PDF), use ExportConfiguration object. use configurations similar look feel different esqLABS projects, create configurations using following functions: createEsqlabsPlotConfiguration() createEsqlabsPlotGridConfiguration() createEsqlabsExportConfiguration(projectConfiguration) list supported properties PlotGirdConfiguration, refer reference next example shows create multi-panel figure using default configurations.  save plot PNG file, use ExportConfiguration. Make sure fileName argument end .png:","code":"library(esqlabsR) # Create a project configuration projectConfiguration <- createDefaultProjectConfiguration() # Create `ScenarioConfiguration` objects from excel files scenarioConfigurations <- readScenarioConfigurationFromExcel(   scenarioNames = \"TestScenario\",   projectConfiguration = projectConfiguration ) # Run scenario configuration simulatedScenarios <- runScenarios(   scenarioConfigurations = scenarioConfigurations,   customParams = NULL, saveSimulationsToPKML = FALSE )  # Load observed data dataSheets <- \"Laskin 1982.Group A\" observedData <- loadObservedData(projectConfiguration = projectConfiguration, sheets = dataSheets) dataCombined <- DataCombined$new() dataCombined$addDataSets(observedData, names = \"Observed\", groups = \"Aciclovir\") dataCombined$addSimulationResults(simulatedScenarios$TestScenario$results,   names = \"Simulated\",   groups = \"Aciclovir\" ) plotConfig <- createEsqlabsPlotConfiguration() gridConfig <- createEsqlabsPlotGridConfiguration()  plotConfig$title <- \"Time profile\" indivPlot <- plotIndividualTimeProfile(dataCombined, defaultPlotConfiguration = plotConfig)  plotConfig$title <- \"Observed-vs-simulated\" obsVsSimPlot <- plotObservedVsSimulated(dataCombined, defaultPlotConfiguration = plotConfig)  plotConfig$title <- \"Res-vs-time\" resVsTimePlot <- plotResidualsVsTime(dataCombined, defaultPlotConfiguration = plotConfig)  plotConfig$title <- \"Res-vs-simulated\" resVsSimPlot <- plotResidualsVsSimulated(dataCombined, defaultPlotConfiguration = plotConfig)  gridConfig$addPlots(list(indivPlot, obsVsSimPlot, resVsTimePlot, resVsSimPlot)) gridConfig$title <- \"All aciclovir plots\" gridPlot <- plotGrid(gridConfig) gridPlot exportConfig <- createEsqlabsExportConfiguration(projectConfiguration) exportConfig$savePlot(gridPlot, fileName = \"All plots.png\")"},{"path":"https://esqlabs.github.io/esqlabsR/dev/articles/visualization-and-reporting.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Visualization and reporting","text":"time, can check groups assigned datasets DataCombined object calling DataCombined$groupMap examining output dataCombined$toDataFrame(). detailed information function signatures can found : DataCombined class plotIndividualTimeProfile() plotObservedVsSimulated() plotResidualsVsSimulated() plotResidualsVsTime() PlotGridConfiguration plotGrid() ExportConfiguration","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":". Copyright holder, funder. Pavel Balazki. Maintainer, author.            https://github.com/PavelBal Johanna Eitel. Author. Indrajeet Patil. Author.            @patilindrajeets Sergei Vavilov. Author.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balazki P, Eitel J, Patil , Vavilov S (2023). esqlabsR: esqLABS utilities package. R package version 5.0.0, https://github.com/esqLABS/esqlabsR.","code":"@Manual{,   title = {esqlabsR: esqLABS utilities package},   author = {Pavel Balazki and Johanna Eitel and Indrajeet Patil and Sergei Vavilov},   year = {2023},   note = {R package version 5.0.0},   url = {https://github.com/esqLABS/esqlabsR}, }"},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/index.html","id":"esqlabsr-","dir":"","previous_headings":"","what":"esqLABS utilities package","title":"esqLABS utilities package","text":"esqlabsR R-package designed facilitate standardize modeling simulation (M&S) PBPK QSP models implemented Open Systems Pharmacology Software (OSPS) executed R. package provides functions read run scenarios, workflows, simulations. Furthermore, creates visualizations based non-code input Excel files. package based R functions ospsuite package.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"esqLABS utilities package","text":"Install binary file AppVeyor link. esqlabsR package requires following packages: R6 colorspace, dplyr, ggplot2, purrr, readxl, shiny, shinyjs, tidyr, tools, vctrs, writexl, stringr, labeling, readr, rlang, jsonlite, patchwork, hash, FME rClr > 0.9.2 ospsuite.utils > 1.4.0 tlf > 1.5.0 ospsuite > 11.1 ospsuite.parameteridentification > 1.2","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/index.html","id":"for-projects-created-for-version-3","dir":"","previous_headings":"Installation","what":"For projects created for version 3","title":"esqLABS utilities package","text":"run code written version 3 esqlabsR package, additionally install esqlabsRLegacy package.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"esqLABS utilities package","text":"Follow OSPS-R coding standards. additional useful information can found .","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"esqLABS utilities package","text":"Please note esqlabsR project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/applyIndividualParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply an individual to the simulation.\r\nFor human species, only parameters that do not override formulas are applied.\r\nFor other species, all parameters returned by createIndividual are applied. — applyIndividualParameters","title":"Apply an individual to the simulation.\r\nFor human species, only parameters that do not override formulas are applied.\r\nFor other species, all parameters returned by createIndividual are applied. — applyIndividualParameters","text":"Apply individual simulation. human species, parameters override formulas applied. species, parameters returned createIndividual applied.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/applyIndividualParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply an individual to the simulation.\r\nFor human species, only parameters that do not override formulas are applied.\r\nFor other species, all parameters returned by createIndividual are applied. — applyIndividualParameters","text":"","code":"applyIndividualParameters(individualCharacteristics, simulation)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/applyIndividualParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply an individual to the simulation.\r\nFor human species, only parameters that do not override formulas are applied.\r\nFor other species, all parameters returned by createIndividual are applied. — applyIndividualParameters","text":"individualCharacteristics IndividualCharacteristics describing individual. Optional simulation Simulation loaded PKML file","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/applyIndividualParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply an individual to the simulation.\r\nFor human species, only parameters that do not override formulas are applied.\r\nFor other species, all parameters returned by createIndividual are applied. — applyIndividualParameters","text":"","code":"if (FALSE) { simulation <- loadSimulation(filePath = modelPath) humanIndividualCharacteristics <- createIndividualCharacteristics(   species = Species$Human, population = HumanPopulation$European_ICRP_2002,   gender = Gender$Male, weight = 70 ) applyIndividualParameters(humanIndividualCharacteristics, simulation) }"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/calculateMeanDataSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean and standard deviation for the yValues of the given DataSet objects — calculateMeanDataSet","title":"Calculate mean and standard deviation for the yValues of the given DataSet objects — calculateMeanDataSet","text":"Calculate mean standard deviation yValues given DataSet objects","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/calculateMeanDataSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean and standard deviation for the yValues of the given DataSet objects — calculateMeanDataSet","text":"","code":"calculateMeanDataSet(   dataSets,   method = \"arithmetic\",   lloqMode = LLOQMode$`LLOQ/2`,   outputXunit = NULL,   outputYunit = NULL,   outputMolWeight = NULL )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/calculateMeanDataSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean and standard deviation for the yValues of the given DataSet objects — calculateMeanDataSet","text":"dataSets list DataSet objects method method calculating mean standard deviation - either arithmetic (default) geometric lloqMode treat data points LLOQ LLOQ given - LLOQ/2 (default): use given (since DataSet stores values LLOQ LLOQ/2), LLOQ: set value LLOQ value, ZERO: set value 0, ignore: use data points mean calculation outputXunit xUnit output data set, NULL (default) xUnit first data set used outputYunit yUnit output data set, NULL (default) yUnit first data set used outputMolWeight molWeight output data set g/mol - obligatory initial data sets differing molWeight values","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/calculateMeanDataSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mean and standard deviation for the yValues of the given DataSet objects — calculateMeanDataSet","text":"single DataSet object","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/calculateMeanDataSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate mean and standard deviation for the yValues of the given DataSet objects — calculateMeanDataSet","text":"Calculates mean standard deviation yValues given DataSet objects per xValue. meta data returned DataSet consists meta data equal initial data sets. LLOQ mean LLOQ value data sets LLOQ set, e.g. dataSet1 LLOQ 1, dataSet2 LLOQ 3 dataSet3 LLOQ, 2 used returned DataSet. LLOQ returned DataSet arithmetic mean LLOQ values DataSets","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/col2hsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the HSV values for a given R color name — col2hsv","title":"Returns the HSV values for a given R color name — col2hsv","text":"Returns HSV values given R color name","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/col2hsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the HSV values for a given R color name — col2hsv","text":"","code":"col2hsv(color)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/col2hsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the HSV values for a given R color name — col2hsv","text":"color vector three kinds R color specifications, .e., either color name (listed colors()), hexadecimal string form \"#rrggbb\" \"#rrggbbaa\" (see rgb), positive integer meaning palette()[].","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/col2hsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the HSV values for a given R color name — col2hsv","text":"matrix column color. three rows matrix indicate hue, saturation value named \"h\", \"s\", \"v\" accordingly.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/col2hsv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the HSV values for a given R color name — col2hsv","text":"","code":"col2hsv(\"yellow\") #>        [,1] #> h 0.1666667 #> s 1.0000000 #> v 1.0000000"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/compareSimulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two simulations — compareSimulations","title":"Compare two simulations — compareSimulations","text":"Compare two simulations","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/compareSimulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two simulations — compareSimulations","text":"","code":"compareSimulations(simulation1, simulation2, compareFormulasByValue = FALSE)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/compareSimulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two simulations — compareSimulations","text":"simulation1 First Simulation compare simulation2 Second Simulation compare compareFormulasByValue FALSE (default), parameters considered equal value different formulas (e.g., constant vs. explicit formula). TRUE, values compared.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/compareSimulations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two simulations — compareSimulations","text":"Named list following levels: Parameters named lists In1NotIn2, In2NotIn1, Different, holding Parameter objects present first second simulation, present second first simulation, present simulations different formulas /values, respectively.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/compareSimulations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare two simulations — compareSimulations","text":"function compares two simulations returns list entities differ: Parameters: named list list Parameter entities : simulation1 simulation 2 (In1NotIn2) simulation 2 simulation 1 (I21NotIn1) list Different parameters values differ simulations. Two parameters considered different formulas values differ.","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/compareSimulations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two simulations — compareSimulations","text":"","code":"if (FALSE) { humanSim <- loadSimulation(file.path(modelFolder, \"DefaultHuman.pkml\")) ratSim <- loadSimulation(file.path(modelFolder, \"DefaultRat.pkml\")) diffParams <- compareSimulationParameters(humanSim, ratSim) }"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/compareWithNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare values including NA — compareWithNA","title":"Compare values including NA — compareWithNA","text":"Compare values including NA","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/compareWithNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare values including NA — compareWithNA","text":"","code":"compareWithNA(v1, v2)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/compareWithNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare values including NA — compareWithNA","text":"v1 Value list values compare. May include NA. v2 Value list values compare. May include NA.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/compareWithNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare values including NA — compareWithNA","text":"TRUE wherever elements , including NA's,","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/compareWithNA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare values including NA — compareWithNA","text":"http://www.cookbook-r.com/Manipulating_data/Comparing_vectors_or_factors_with_NA/","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createDataCombinedFromExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate DataCombined objects as defined in excel file — createDataCombinedFromExcel","title":"Generate DataCombined objects as defined in excel file — createDataCombinedFromExcel","text":"Generate DataCombined objects defined excel file","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createDataCombinedFromExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate DataCombined objects as defined in excel file — createDataCombinedFromExcel","text":"","code":"createDataCombinedFromExcel(   file,   sheet = NULL,   dataCombinedNames = NULL,   simulatedScenarios = NULL,   observedData = NULL,   stopIfNotFound = TRUE )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createDataCombinedFromExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate DataCombined objects as defined in excel file — createDataCombinedFromExcel","text":"file Full path excel file sheet Name sheet use - NULL first sheet used dataCombinedNames Names DataCombined objects created. NULL (default), DataCombined objects specified excel sheet created. DataCombined object given name exist, error thrown. simulatedScenarios list simulated scenarios returned runScenarios() observedData list DataSet objects stopIfNotFound TRUE (default), function stops simulated results observed data found. FALSE warning printed.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createDataCombinedFromExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate DataCombined objects as defined in excel file — createDataCombinedFromExcel","text":"list DataCombined objects","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createDefaultProjectConfiguration.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a default ProjectConfiguration — createDefaultProjectConfiguration","title":"Create a default ProjectConfiguration — createDefaultProjectConfiguration","text":"Create default ProjectConfiguration","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createDefaultProjectConfiguration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a default ProjectConfiguration — createDefaultProjectConfiguration","text":"","code":"createDefaultProjectConfiguration(   path = file.path(\"ProjectConfiguration.xlsx\") )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createDefaultProjectConfiguration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a default ProjectConfiguration — createDefaultProjectConfiguration","text":"path Full path XLS/XLSX file","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createDefaultProjectConfiguration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a default ProjectConfiguration — createDefaultProjectConfiguration","text":"Object type ProjectConfiguration","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createDefaultProjectConfiguration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a default ProjectConfiguration — createDefaultProjectConfiguration","text":"Create ProjectConfiguration based \"ProjectConfiguration.xlsx\" located \"Code\" folder.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsExportConfiguration.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an instance of ExportConfiguration R6 class — createEsqlabsExportConfiguration","title":"Create an instance of ExportConfiguration R6 class — createEsqlabsExportConfiguration","text":"instance ExportConfiguration R6 class {tlf} package needed saving plots plot grids created using {ospsuite} package. default attributes class chosen reflect corporate standards adopted esqLABS GmbH.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsExportConfiguration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an instance of ExportConfiguration R6 class — createEsqlabsExportConfiguration","text":"","code":"createEsqlabsExportConfiguration(projectConfiguration)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsExportConfiguration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an instance of ExportConfiguration R6 class — createEsqlabsExportConfiguration","text":"projectConfiguration Object class ProjectConfiguration contains information output paths.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsExportConfiguration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an instance of ExportConfiguration R6 class — createEsqlabsExportConfiguration","text":"instance ExportConfiguration R6 class.","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsExportConfiguration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an instance of ExportConfiguration R6 class — createEsqlabsExportConfiguration","text":"","code":"myProjConfig <- ProjectConfiguration$new() createEsqlabsExportConfiguration(myProjConfig) #> Format: PNG #> Width: 18 cm #> Height: 18 cm #> Resolution: 300 dots per inch"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsPlotConfiguration.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an instance of DefaultPlotConfiguration R6 class — createEsqlabsPlotConfiguration","title":"Create an instance of DefaultPlotConfiguration R6 class — createEsqlabsPlotConfiguration","text":"instance DefaultPlotConfiguration R6 class needed creating visualizations {ospsuite} package. default attributes class chosen reflect corporate standards adopted esqLABS GmbH.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsPlotConfiguration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an instance of DefaultPlotConfiguration R6 class — createEsqlabsPlotConfiguration","text":"","code":"createEsqlabsPlotConfiguration()"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsPlotConfiguration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an instance of DefaultPlotConfiguration R6 class — createEsqlabsPlotConfiguration","text":"instance DefaultPlotConfiguration R6 class.","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsPlotConfiguration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an instance of DefaultPlotConfiguration R6 class — createEsqlabsPlotConfiguration","text":"","code":"createEsqlabsPlotConfiguration() #> <DefaultPlotConfiguration> #>   Public: #>     caption: NULL #>     captionAlign: right #>     captionAngle: 0 #>     captionColor: black #>     captionFontFace: plain #>     captionFontFamily:  #>     captionSize: 8 #>     clone: function (deep = FALSE)  #>     displayLLOQ: TRUE #>     errorbarsAlpha: 0.75 #>     errorbarsCapSize: 5 #>     errorbarsLinetype: solid #>     errorbarsSize: 1 #>     foldLinesLegend: FALSE #>     foldLinesLegendDiagonal: FALSE #>     legendBackgroundAlpha: 0 #>     legendBackgroundColor: white #>     legendBorderColor: grey10 #>     legendBorderSize: NULL #>     legendBorderType: 1 #>     legendKeysAlign: left #>     legendKeysAngle: 0 #>     legendKeysColor: black #>     legendKeysFontFace: plain #>     legendKeysFontFamily:  #>     legendKeysSize: 10 #>     legendPosition: outsideTopRight #>     legendTitle: NULL #>     legendTitleAlign: left #>     legendTitleAngle: 0 #>     legendTitleColor: black #>     legendTitleFontFace: plain #>     legendTitleFontFamily:  #>     legendTitleSize: 8 #>     linesAlpha: 0.75 #>     linesColor: NULL #>     linesLinetype: NULL #>     linesSize: 1 #>     lloqDirection: NULL #>     plotBackgroundColor: black #>     plotBackgroundFill: white #>     plotBackgroundLinetype: blank #>     plotBackgroundSize: 0.5 #>     plotPanelBackgroundColor: black #>     plotPanelBackgroundFill: white #>     plotPanelBackgroundLinetype: solid #>     plotPanelBackgroundSize: 0.5 #>     pointsAlpha: 0.75 #>     pointsColor: #5050FFFF #CE3D32FF #749B58FF #F0E685FF #466983FF #BA633 ... #>     pointsShape: circle diamond triangle square invertedTriangle cross th ... #>     pointsSize: 3 #>     ribbonsAlpha: 0.5 #>     ribbonsFill: #5050FFFF #CE3D32FF #749B58FF #F0E685FF #466983FF #BA633 ... #>     ribbonsLinetype: solid longdash dotted dashed twodash dotdash blank #>     ribbonsSize: 1 #>     subtitle: NULL #>     subtitleAlign: left #>     subtitleAngle: 0 #>     subtitleColor: black #>     subtitleFontFace: plain #>     subtitleFontFamily:  #>     subtitleSize: 10 #>     title: NULL #>     titleAlign: left #>     titleAngle: 0 #>     titleColor: black #>     titleFontFace: plain #>     titleFontFamily:  #>     titleSize: 14 #>     watermark: NULL #>     watermarkAlign: center #>     watermarkAngle: 30 #>     watermarkColor: grey40 #>     watermarkFontFace: plain #>     watermarkFontFamily:  #>     watermarkSize: 20 #>     xAxisColor: black #>     xAxisExpand: FALSE #>     xAxisLabelTicksAlign: center #>     xAxisLabelTicksAngle: 0 #>     xAxisLabelTicksColor: black #>     xAxisLabelTicksFontFace: plain #>     xAxisLabelTicksFontFamily:  #>     xAxisLabelTicksSize: 10 #>     xAxisLimits: NULL #>     xAxisLinetype: solid #>     xAxisScale: NULL #>     xAxisSize: 0.5 #>     xAxisTicks: NULL #>     xAxisTicksLabels: identity #>     xGridColor: grey #>     xGridLinetype: blank #>     xGridSize: 0.25 #>     xLabel: NULL #>     xLabelAlign: center #>     xLabelAngle: 0 #>     xLabelColor: black #>     xLabelFontFace: plain #>     xLabelFontFamily:  #>     xLabelSize: 10 #>     xUnit: NULL #>     yAxisColor: black #>     yAxisExpand: FALSE #>     yAxisLabelTicksAlign: center #>     yAxisLabelTicksAngle: 90 #>     yAxisLabelTicksColor: black #>     yAxisLabelTicksFontFace: plain #>     yAxisLabelTicksFontFamily:  #>     yAxisLabelTicksSize: 10 #>     yAxisLimits: NULL #>     yAxisLinetype: solid #>     yAxisScale: NULL #>     yAxisSize: 0.5 #>     yAxisTicks: NULL #>     yAxisTicksLabels: identity #>     yGridColor: grey #>     yGridLinetype: blank #>     yGridSize: 0.25 #>     yLabel: NULL #>     yLabelAlign: center #>     yLabelAngle: 90 #>     yLabelColor: black #>     yLabelFontFace: plain #>     yLabelFontFamily:  #>     yLabelSize: 10 #>     yUnit: NULL"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsPlotGridConfiguration.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an instance of PlotGridConfiguration R6 class — createEsqlabsPlotGridConfiguration","title":"Create an instance of PlotGridConfiguration R6 class — createEsqlabsPlotGridConfiguration","text":"instance PlotGridConfiguration R6 class {tlf} package needed creating grid multiple visualizations created using {ospsuite} package. default attributes class chosen reflect corporate standards adopted esqLABS GmbH.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsPlotGridConfiguration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an instance of PlotGridConfiguration R6 class — createEsqlabsPlotGridConfiguration","text":"","code":"createEsqlabsPlotGridConfiguration()"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsPlotGridConfiguration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an instance of PlotGridConfiguration R6 class — createEsqlabsPlotGridConfiguration","text":"instance PlotGridConfiguration R6 class.","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createEsqlabsPlotGridConfiguration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an instance of PlotGridConfiguration R6 class — createEsqlabsPlotGridConfiguration","text":"","code":"createEsqlabsPlotGridConfiguration() #> PlotGridConfiguration:  #>    Plot grid annotations:  #>    \tTitle:  #>    \tSubtitle:  #>    \tCaption:  #>    Plot grid arrangement:  #>    \tNumber of plots included: 0  #>    \tNumber of columns in the grid:  #>    \tNumber of rows in the grid:  #>    \tArranged in row-major order:  #>    Individual plot tags:  #>    \tTag level format: a  #>    \tTag level prefix:  #>    \tTag level suffix:  #>    \tTag level separator:"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createPlotsFromExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate plots as defined in excel file projectConfiguration$plotsFile — createPlotsFromExcel","title":"Generate plots as defined in excel file projectConfiguration$plotsFile — createPlotsFromExcel","text":"Generate plots defined excel file projectConfiguration$plotsFile","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createPlotsFromExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate plots as defined in excel file projectConfiguration$plotsFile — createPlotsFromExcel","text":"","code":"createPlotsFromExcel(   plotGridNames = NULL,   simulatedScenarios,   observedData,   projectConfiguration,   stopIfNotFound = TRUE )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createPlotsFromExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate plots as defined in excel file projectConfiguration$plotsFile — createPlotsFromExcel","text":"plotGridNames Names plot grid specified sheet plotGrids figures created. NULL (default), plot grids specified excel sheet created. plot grid given name exist, error thrown. simulatedScenarios list simulated scenarios returned runScenarios() observedData list DataSet objects projectConfiguration Object class ProjectConfiguration contains information output paths excel file plots defined. stopIfNotFound TRUE (default), function stops simulated results observed data found. FALSE warning printed.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/createPlotsFromExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate plots as defined in excel file projectConfiguration$plotsFile — createPlotsFromExcel","text":"list ggplot objects","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/Distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Supported distributions for sampling — Distributions","title":"Supported distributions for sampling — Distributions","text":"Supported distributions sampling","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/Distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supported distributions for sampling — Distributions","text":"","code":"Distributions"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/Distributions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Supported distributions for sampling — Distributions","text":"object class list length 2.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-createConfigurationFromRow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a plotConfiguration or exportConfiguration objects from a row of sheet\r\n'plotConfiguration' or 'exportConfiguration' — .createConfigurationFromRow","title":"Create a plotConfiguration or exportConfiguration objects from a row of sheet\r\n'plotConfiguration' or 'exportConfiguration' — .createConfigurationFromRow","text":"Create plotConfiguration exportConfiguration objects row sheet 'plotConfiguration' 'exportConfiguration'","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-createConfigurationFromRow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a plotConfiguration or exportConfiguration objects from a row of sheet\r\n'plotConfiguration' or 'exportConfiguration' — .createConfigurationFromRow","text":"","code":".createConfigurationFromRow(defaultConfiguration, ...)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-createConfigurationFromRow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a plotConfiguration or exportConfiguration objects from a row of sheet\r\n'plotConfiguration' or 'exportConfiguration' — .createConfigurationFromRow","text":"defaultConfiguration default plotConfiguration exportConfiguration ... row configuration properties","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-createConfigurationFromRow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a plotConfiguration or exportConfiguration objects from a row of sheet\r\n'plotConfiguration' or 'exportConfiguration' — .createConfigurationFromRow","text":"customized plot- exportConfiguration object","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateClassHasField.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the object contains active binding with the name field — .validateClassHasField","title":"Check if the object contains active binding with the name field — .validateClassHasField","text":"Check object contains active binding name field","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateClassHasField.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the object contains active binding with the name field — .validateClassHasField","text":"","code":".validateClassHasField(object, field)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateClassHasField.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the object contains active binding with the name field — .validateClassHasField","text":"object class instance class check field Name field","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateClassHasField.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the object contains active binding with the name field — .validateClassHasField","text":"TRUE object active binding field, `FALSE?  otherwise.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateDataCombinedFromExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and process the 'DataCombined' sheet — .validateDataCombinedFromExcel","title":"Validate and process the 'DataCombined' sheet — .validateDataCombinedFromExcel","text":"Validate process 'DataCombined' sheet","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateDataCombinedFromExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and process the 'DataCombined' sheet — .validateDataCombinedFromExcel","text":"","code":".validateDataCombinedFromExcel(   dfDataCombined,   simulatedScenarios,   observedData,   stopIfNotFound )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateDataCombinedFromExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and process the 'DataCombined' sheet — .validateDataCombinedFromExcel","text":"dfDataCombined Data frame created reading ' DataCombined' sheet simulatedScenarios List simulated scenarios created runScenarios() observedData Observed data objects stopIfNotFound TRUE, throw error simulated result observed data found","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateDataCombinedFromExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and process the 'DataCombined' sheet — .validateDataCombinedFromExcel","text":"Processed dfDataCombined","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateExportConfigurationsFromExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and process the 'exportConfiguration' sheet — .validateExportConfigurationsFromExcel","title":"Validate and process the 'exportConfiguration' sheet — .validateExportConfigurationsFromExcel","text":"Validate process 'exportConfiguration' sheet","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateExportConfigurationsFromExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and process the 'exportConfiguration' sheet — .validateExportConfigurationsFromExcel","text":"","code":".validateExportConfigurationsFromExcel(dfExportConfigurations, plotGrids)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateExportConfigurationsFromExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and process the 'exportConfiguration' sheet — .validateExportConfigurationsFromExcel","text":"dfExportConfigurations Data frame created reading 'exportConfiguration' sheet plotGrids List multipanel plots created previously","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateExportConfigurationsFromExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and process the 'exportConfiguration' sheet — .validateExportConfigurationsFromExcel","text":"Processed dfExportConfigurations","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateParametersStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate parameter list structure — .validateParametersStructure","title":"Validate parameter list structure — .validateParametersStructure","text":"Validate parameter list structure","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateParametersStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate parameter list structure — .validateParametersStructure","text":"","code":".validateParametersStructure(   parameterStructure,   argumentName = NULL,   nullAllowed = FALSE )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateParametersStructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate parameter list structure — .validateParametersStructure","text":"parameterStructure Object checked. Expected named list names \"paths\", \"values\", \"units\".","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateParametersStructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate parameter list structure — .validateParametersStructure","text":"TRUE validation succeeded (silently). Throws error otherwise.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validatePlotConfigurationFromExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and process the 'plotConfiguration' sheet — .validatePlotConfigurationFromExcel","title":"Validate and process the 'plotConfiguration' sheet — .validatePlotConfigurationFromExcel","text":"Validate process 'plotConfiguration' sheet","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validatePlotConfigurationFromExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and process the 'plotConfiguration' sheet — .validatePlotConfigurationFromExcel","text":"","code":".validatePlotConfigurationFromExcel(dfPlotConfigurations, dataCombinedNames)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validatePlotConfigurationFromExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and process the 'plotConfiguration' sheet — .validatePlotConfigurationFromExcel","text":"dfPlotConfigurations Data frame created reading ' plotConfiguration' sheet dataCombinedNames Names 'DataCombined' referenced plot configurations","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validatePlotConfigurationFromExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and process the 'plotConfiguration' sheet — .validatePlotConfigurationFromExcel","text":"Processed dfPlotConfigurations","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validatePlotGridsFromExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and process the 'plotGrids' sheet — .validatePlotGridsFromExcel","title":"Validate and process the 'plotGrids' sheet — .validatePlotGridsFromExcel","text":"Validate process 'plotGrids' sheet","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validatePlotGridsFromExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and process the 'plotGrids' sheet — .validatePlotGridsFromExcel","text":"","code":".validatePlotGridsFromExcel(dfPlotGrids, plotIDs)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validatePlotGridsFromExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and process the 'plotGrids' sheet — .validatePlotGridsFromExcel","text":"dfPlotGrids Data frame created reading ' plotGrids' sheet plotIDs IDs plots referenced plot grids","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validatePlotGridsFromExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and process the 'plotGrids' sheet — .validatePlotGridsFromExcel","text":"Processed dfPlotGrids","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateScenarioConfigurations.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate ScenarioConfiguration objects — .validateScenarioConfigurations","title":"Validate ScenarioConfiguration objects — .validateScenarioConfigurations","text":"Validate ScenarioConfiguration objects","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateScenarioConfigurations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate ScenarioConfiguration objects — .validateScenarioConfigurations","text":"","code":".validateScenarioConfigurations(scenarioConfigurations)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/dot-validateScenarioConfigurations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate ScenarioConfiguration objects — .validateScenarioConfigurations","text":"scenarioConfigurations Scenario configurations validate.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/enumPutList.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new key-value pairs to an enum, where the value is a list. — enumPutList","title":"Add a new key-value pairs to an enum, where the value is a list. — enumPutList","text":"Add new key-value pairs enum, value list.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/enumPutList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new key-value pairs to an enum, where the value is a list. — enumPutList","text":"","code":"enumPutList(key, values, enum, overwrite = FALSE)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/enumPutList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new key-value pairs to an enum, where the value is a list. — enumPutList","text":"key Key added values Values added enum enum key-value pairs added . WARNING: original object modified! overwrite TRUE key exists, overwritten new value. Otherwise, error thrown. Default FALSE.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/enumPutList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new key-value pairs to an enum, where the value is a list. — enumPutList","text":"Enum added key-value pair.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/enumPutList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a new key-value pairs to an enum, where the value is a list. — enumPutList","text":"","code":"library(ospsuite.utils) myEnum <- enum(c(a = \"b\")) myEnum <- enumPut(\"c\", \"d\", myEnum) myEnum <- enumPut(c(\"c\", \"d\", \"g\"), list(12, 2, \"a\"), myEnum, overwrite = TRUE) myEnum <- enumPutList(\"g\", list(12, 2, \"a\"), myEnum, overwrite = TRUE)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/escapeForRegex.html","id":null,"dir":"Reference","previous_headings":"","what":"Escape a string for possible regular expression match — escapeForRegex","title":"Escape a string for possible regular expression match — escapeForRegex","text":"Escape string possible regular expression match","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/escapeForRegex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escape a string for possible regular expression match — escapeForRegex","text":"","code":"escapeForRegex(string)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/escapeForRegex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escape a string for possible regular expression match — escapeForRegex","text":"string String escaped","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/escapeForRegex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Escape a string for possible regular expression match — escapeForRegex","text":"string prefix \"\\Q\" suffix \"\\E\" appended. resulting string recognized regular expression pattern.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/esqlabsRSettingNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of the settings stored in esqlabsEnv Can be used with getEsqlabsRSetting() — esqlabsRSettingNames","title":"Names of the settings stored in esqlabsEnv Can be used with getEsqlabsRSetting() — esqlabsRSettingNames","text":"Names settings stored esqlabsEnv Can used getEsqlabsRSetting()","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/esqlabsRSettingNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of the settings stored in esqlabsEnv Can be used with getEsqlabsRSetting() — esqlabsRSettingNames","text":"","code":"esqlabsRSettingNames"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/esqlabsRSettingNames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Names of the settings stored in esqlabsEnv Can be used with getEsqlabsRSetting() — esqlabsRSettingNames","text":"object class list length 2.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/esqLABS_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"esqLABS color palette — esqLABS_colors","title":"esqLABS color palette — esqLABS_colors","text":"Returns list colors extrapolated esqLABS colors blue, red, green.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/esqLABS_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"esqLABS color palette — esqLABS_colors","text":"","code":"esqLABS_colors(nrOfColors)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/esqLABS_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"esqLABS color palette — esqLABS_colors","text":"nrOfColors Positive integer defining number colors generated.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/esqLABS_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"esqLABS color palette — esqLABS_colors","text":"list colors HEX values.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/esqLABS_colors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"esqLABS color palette — esqLABS_colors","text":"nrOfColors == 1, esqLABS-blue returned nrOfColors == 2, esqLABS-blue green returned nrOfColors == 3, esqLABS-blue, red, green returned nrOfColors > 3, three esqLABS colors fixed, remaining colors extrapolated blue red green. nrOfColors uneven, blue--red section becomes one color red--green section. implementation, blue--green considered.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/executeInParallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallelize the execution of a function over a list of arguments values — executeInParallel","title":"Parallelize the execution of a function over a list of arguments values — executeInParallel","text":"Parallelize execution function list arguments values","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/executeInParallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallelize the execution of a function over a list of arguments values — executeInParallel","text":"","code":"executeInParallel(   fun,   firstArguments,   exports = NULL,   ...,   outputNames = NULL,   nrOfCores = ospsuite::getOSPSuiteSetting(\"numberOfCores\") )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/executeInParallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallelize the execution of a function over a list of arguments values — executeInParallel","text":"fun function called different arguments values firstArguments list values first argument function. function called n times n number entries firstArguments exports Names objects calling environment function relies passed arguments. May NULL (default). ... arguments function. outputNames Optional: list names used output list. Result execution fun named name index outputNames argument value firstArguments. specified, outputNames must length firstArguments nrOfCores Optional: maximal number parallel threads. default value defined ospsuite::getOSPSuiteSetting(\"numberOfCores\") used, equals number logical cores minus 1.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/executeInParallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallelize the execution of a function over a list of arguments values — executeInParallel","text":"list containing outputs function fun iterated values firstArguments.","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/exportParametersToXLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Export simulation parameters to excel — exportParametersToXLS","title":"Export simulation parameters to excel — exportParametersToXLS","text":"Creates excel file information passed parameters. excel sheet contain columns \"Container Path\", \"Parameter Name\", \"Value\", \"Units\". resulting file can loaded MoBi R function readParametersFromXLS().","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/exportParametersToXLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export simulation parameters to excel — exportParametersToXLS","text":"","code":"exportParametersToXLS(parameters, paramsXLSpath, sheet = NULL)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/exportParametersToXLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export simulation parameters to excel — exportParametersToXLS","text":"parameters single list Parameter objects paramsXLSpath Path excel file sheet (Optional) name excel sheet","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/exportSteadyStateToXLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Export steady-state to excel — exportSteadyStateToXLS","title":"Export steady-state to excel — exportSteadyStateToXLS","text":"Export steady-state excel","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/exportSteadyStateToXLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export steady-state to excel — exportSteadyStateToXLS","text":"","code":"exportSteadyStateToXLS(   simulation,   quantitiesPaths = NULL,   resultsXLSPath = \"\",   steadyStateTime = 1000,   ignoreIfFormula = TRUE,   stopIfNotFound = TRUE,   lowerThreshold = 1e-15,   simulationRunOptions = NULL )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/exportSteadyStateToXLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export steady-state to excel — exportSteadyStateToXLS","text":"simulation Simulation object updated steady state quantitiesPaths List quantity paths (molecules /parameters) steady-state simulated. NULL (default), molecules state variable parameters considered. list applied simulations. resultsXLSPath Path xls-file results written . file exist, new file created. path provided, file created directory model file located. name file <SimulationFileName>_SS. steadyStateTime Simulation time (minutes). Must long enough system reach steady-state. 1000 default ignoreIfFormula TRUE (default), species parameters initial values defined formula included. stopIfNotFound Boolean. TRUE (default), error thrown results certain species generated. may happen due numerical problems values calculated, though whole simulation converges. Setting argument FALSE allows ignore errors. Check outputs empty values using option. lowerThreshold Numerical value (default unit output). steady-state values value considered numerical noise replaced 0. lowerThreshold NULL, cut-applied. Default value 1e-15. simulationRunOptions Optional instance SimulationRunOptions used simulation run.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/exportSteadyStateToXLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export steady-state to excel — exportSteadyStateToXLS","text":"Simulates given model steady-state creates Excel-file end values molecules amounts containers parameter values right-hand-side (state variable parameters).","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendParameterStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend parameters structure with new entries — extendParameterStructure","title":"Extend parameters structure with new entries — extendParameterStructure","text":"Extend parameters structure new entries","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendParameterStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend parameters structure with new entries — extendParameterStructure","text":"","code":"extendParameterStructure(parameters, newParameters)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendParameterStructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend parameters structure with new entries — extendParameterStructure","text":"parameters list containing vectors 'paths' full paths parameters, 'values' values parameters, 'units' units values . list extended. newParameters list containing vectors 'paths' full paths parameters, 'values' values parameters, 'units' units values . Entries list extend overwrite list parameters","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendParameterStructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend parameters structure with new entries — extendParameterStructure","text":"Updated list parameter paths, values, units","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendParameterStructure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extend parameters structure with new entries — extendParameterStructure","text":"function adds new parameter entries newParameters parameters. entry path already present parameters, value unit overwritten values newParameters.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendPopulationByUserDefinedParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Add user defined variability on parameters to a population. — extendPopulationByUserDefinedParams","title":"Add user defined variability on parameters to a population. — extendPopulationByUserDefinedParams","text":"Add user defined variability parameters population.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendPopulationByUserDefinedParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add user defined variability on parameters to a population. — extendPopulationByUserDefinedParams","text":"","code":"extendPopulationByUserDefinedParams(   population,   parameterPaths,   meanValues,   sdValues,   distributions = Distributions$Normal )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendPopulationByUserDefinedParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add user defined variability on parameters to a population. — extendPopulationByUserDefinedParams","text":"population Object type Population parameterPaths Vector parameter path variability added. meanValues Vector mean values parameters. Must length parameterPaths. type mean (arithmetic, geometric) depends selected distribution. values must base units parameters. sdValues Vector standard deviation values parameters. Must length parameterPaths. type standard deviation depends selected distribution. distributions Type distribution random values sampled. Must length parameterPaths. list supported distributions defined Distributions. Default \"Normal\".","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendPopulationFromXLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Add user defined variability on parameters to a population from an excel file. — extendPopulationFromXLS","title":"Add user defined variability on parameters to a population from an excel file. — extendPopulationFromXLS","text":"Add user defined variability parameters population excel file.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendPopulationFromXLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add user defined variability on parameters to a population from an excel file. — extendPopulationFromXLS","text":"","code":"extendPopulationFromXLS(population, XLSpath, sheet = NULL)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendPopulationFromXLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add user defined variability on parameters to a population from an excel file. — extendPopulationFromXLS","text":"population Object type Population XLSpath Path excel file stores information parameters. file must columns \"Container.Path\", \"Parameter.Name\", \"Mean\", \"SD\", \"Units\", \"Distribution\". Mean SD values must base units parameters. sheet Name index sheet excel file. NULL, first sheet file used.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/extendPopulationFromXLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add user defined variability on parameters to a population from an excel file. — extendPopulationFromXLS","text":"method reads information specified excel sheet(s) calls extendPopulationByUserDefinedParams","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/foldChangeFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Function returning the fold difference between x and x_0 — foldChangeFunction","title":"Function returning the fold difference between x and x_0 — foldChangeFunction","text":"Function returning fold difference x x_0","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/foldChangeFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function returning the fold difference between x and x_0 — foldChangeFunction","text":"","code":"foldChangeFunction(x, x_0, alpha = 1)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/foldChangeFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function returning the fold difference between x and x_0 — foldChangeFunction","text":"x Value effector. x_0 Basal value effector. alpha Steepness function. Default 1.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/foldChangeFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function returning the fold difference between x and x_0 — foldChangeFunction","text":"(x / x_0)^alpha","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/GenderInt.html","id":null,"dir":"Reference","previous_headings":"","what":"Possible gender entries as integer values — GenderInt","title":"Possible gender entries as integer values — GenderInt","text":"Possible gender entries integer values","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/GenderInt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possible gender entries as integer values — GenderInt","text":"","code":"GenderInt"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/GenderInt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Possible gender entries as integer values — GenderInt","text":"object class list length 3.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/geomean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate geometric mean of a numeric vector. — geomean","title":"Calculate geometric mean of a numeric vector. — geomean","text":"Calculate geometric mean numeric vector.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/geomean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate geometric mean of a numeric vector. — geomean","text":"","code":"geomean(x, na.rm = FALSE, trim = 0)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/geomean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate geometric mean of a numeric vector. — geomean","text":"x Numeric array na.rm logical value indicating whether NA values stripped computation proceeds. trim fraction (0 0.5) observations trimmed end x mean computed. Values trim outside range taken nearest endpoint.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/geomean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate geometric mean of a numeric vector. — geomean","text":"Geometric mean ofx","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/geosd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate geometric standard deviation of a numeric vector — geosd","title":"Calculate geometric standard deviation of a numeric vector — geosd","text":"Calculate geometric standard deviation numeric vector","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/geosd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate geometric standard deviation of a numeric vector — geosd","text":"","code":"geosd(x, na.rm = FALSE)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/geosd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate geometric standard deviation of a numeric vector — geosd","text":"x Numeric array na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/geosd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate geometric standard deviation of a numeric vector — geosd","text":"Geometric standard deviation x","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getAllApplicationParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters of applications in the simulation — getAllApplicationParameters","title":"Get parameters of applications in the simulation — getAllApplicationParameters","text":"Get parameters applications simulation","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getAllApplicationParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters of applications in the simulation — getAllApplicationParameters","text":"","code":"getAllApplicationParameters(simulation, moleculeNames = NULL)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getAllApplicationParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters of applications in the simulation — getAllApplicationParameters","text":"simulation Simulation object moleculeNames Names molecules applications parameters returned. NUll(default), applications molecules returned.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getAllApplicationParameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters of applications in the simulation — getAllApplicationParameters","text":"list Parameter objects defining applications simulation.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getAllApplicationParameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get parameters of applications in the simulation — getAllApplicationParameters","text":"Every application event ProtocolSchemaItem container holds parameters describing dose, start time, infusion time etc. function returns list constant parameters located ProtocolSchemaItem container applications defined moleculeNames.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getAllApplicationParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters of applications in the simulation — getAllApplicationParameters","text":"","code":"simPath <- system.file(\"extdata\", \"Aciclovir.pkml\", package = \"ospsuite\") simulation <- loadSimulation(simPath) applicationParams <- getAllApplicationParameters(simulation = simulation)  applicationParams <- getAllApplicationParameters(   simulation = simulation,   moleculeNames = \"Aciclovir\" )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getEsqlabsRSetting.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the value of a global esqlabsR setting. — getEsqlabsRSetting","title":"Get the value of a global esqlabsR setting. — getEsqlabsRSetting","text":"Get value global esqlabsR setting.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getEsqlabsRSetting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the value of a global esqlabsR setting. — getEsqlabsRSetting","text":"","code":"getEsqlabsRSetting(settingName)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getEsqlabsRSetting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the value of a global esqlabsR setting. — getEsqlabsRSetting","text":"settingName String name setting","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getEsqlabsRSetting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the value of a global esqlabsR setting. — getEsqlabsRSetting","text":"Value setting stored esqlabsEnv. setting exist, error thrown.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getEsqlabsRSetting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the value of a global esqlabsR setting. — getEsqlabsRSetting","text":"","code":"getEsqlabsRSetting(\"packageVersion\") #> version  #> \"5.0.0\"  getEsqlabsRSetting(\"packageName\") #> [1] \"esqlabsR\""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getIndexClosestToValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Find value in an array — getIndexClosestToValue","title":"Find value in an array — getIndexClosestToValue","text":"Find index value array closest given one. default, restriction applied big absolute numerical distance value value array may . limit can set parameters thresholdAbs thresholdRel. value within array distance value equal less threshold, value considered present array NULL returned.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getIndexClosestToValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find value in an array — getIndexClosestToValue","text":"","code":"getIndexClosestToValue(value, array, thresholdAbs = NULL, thresholdRel = NULL)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getIndexClosestToValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find value in an array — getIndexClosestToValue","text":"value Numerical value array Numerical array thresholdAbs Absolute numerical distance closest value array may differ value accepted. thresholdAbs thresholdRel NULL (default), threshold applied. thresholdAbs set, thresholdRel ignored. 0, exact match value array accepted. thresholdRel fraction closest value may differ value accepted. WARNING: setting relative threshold result exact matches value 0!","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getIndexClosestToValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find value in an array — getIndexClosestToValue","text":"Index value within array closest value difference within defined threshold. multiple entries array difference minimal, vector indices returned. value within defined threshold, NULL returned.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getMoleculeNameFromQuantity.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of the molecule from a quantity — getMoleculeNameFromQuantity","title":"Get the name of the molecule from a quantity — getMoleculeNameFromQuantity","text":"Returns name molecule quantity object associated. quantity amount molecule container ('Organism|VenousBlood|Plasma|Aciclovir'), parameter molecule ('Aciclivor|Lipophilicity' 'Organism|VenousBlood|Plasma|Aciclovir|Concentration'), observer (\"Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)\"). quantity associated molecule (e.g. 'Organism|Weight'), error thrown.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getMoleculeNameFromQuantity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of the molecule from a quantity — getMoleculeNameFromQuantity","text":"","code":"getMoleculeNameFromQuantity(quantity)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getMoleculeNameFromQuantity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of the molecule from a quantity — getMoleculeNameFromQuantity","text":"quantity Quantity object","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getMoleculeNameFromQuantity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of the molecule from a quantity — getMoleculeNameFromQuantity","text":"Name molecule quantity associated .","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/getMoleculeNameFromQuantity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the name of the molecule from a quantity — getMoleculeNameFromQuantity","text":"","code":"simulation <- loadSimulation(system.file(\"extdata\", \"Aciclovir.pkml\", package = \"ospsuite\")) quantity <- getQuantity(   path = \"Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)\",   container = simulation ) getMoleculeNameFromQuantity(quantity = quantity) #> [1] \"Aciclovir\""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/hillFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Hill equation, transforming a value of an effector (e.g. concentration) to a\r\nsaturable function value. — hillFunction","title":"Hill equation, transforming a value of an effector (e.g. concentration) to a\r\nsaturable function value. — hillFunction","text":"Hill equation, transforming value effector (e.g. concentration) saturable function value.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/hillFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hill equation, transforming a value of an effector (e.g. concentration) to a\r\nsaturable function value. — hillFunction","text":"","code":"hillFunction(x, Vmax, Km, alpha = 1)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/hillFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hill equation, transforming a value of an effector (e.g. concentration) to a\r\nsaturable function value. — hillFunction","text":"x Value effector. Vmax Maximal value function. Km Value effector value function half-maximal. alpha Hill coefficient defining steepness function. Default 1.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/hillFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hill equation, transforming a value of an effector (e.g. concentration) to a\r\nsaturable function value. — hillFunction","text":"Vmax * x^alpha / (x^alpha + Km^alpha)","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/initializeScenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a simulation based on scenario definition — initializeScenario","title":"Initialize a simulation based on scenario definition — initializeScenario","text":"Load simulation. Apply parameters global XLS. Apply individual physiology. Apply individual model parameters. Apply test parameters (TestParameters.R). Set simulation outputs (OutputPaths.R). Set simulation time. initializeSimulation().","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/initializeScenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a simulation based on scenario definition — initializeScenario","text":"","code":"initializeScenario(scenarioConfiguration, customParams = NULL)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/initializeScenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a simulation based on scenario definition — initializeScenario","text":"scenarioConfiguration ScenarioConfiguration object customParams list three vectors named paths, values, units applied model","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/initializeScenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a simulation based on scenario definition — initializeScenario","text":"Initialized Simulation object","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/initializeSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a simulation and apply a set of parameters. — initializeSimulation","title":"Load a simulation and apply a set of parameters. — initializeSimulation","text":"Helper method combines set common steps performed running simulation. method applies individual parameters data set additional user-defined parameters simulation runs simulation steady-state applies steady-state new initial conditions.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/initializeSimulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a simulation and apply a set of parameters. — initializeSimulation","text":"","code":"initializeSimulation(   simulation,   individualCharacteristics = NULL,   additionalParams = NULL,   simulateSteadyState = FALSE,   steadyStateTime = 1000,   ignoreIfFormula = TRUE,   stopIfParameterNotFound = TRUE,   simulationRunOptions = NULL )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/initializeSimulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a simulation and apply a set of parameters. — initializeSimulation","text":"simulation Simulation loaded PKML file individualCharacteristics Optional IndividualCharacteristics describing individual. additionalParams Optional named list lists 'paths', 'values', 'units'. simulateSteadyState Logical. TRUE, model simulated steadyStateTime minutes applying parameter values defined individualCharacteristics additionalParams, end results simulation applied initial conditions molecules. Default FALSE. steadyStateTime Simulation time (minutes) steady-state simulation. Must long enough system reach steady-state. 1000 default. ignoreIfFormula TRUE (default), species parameters initial values defined formula included steady-state simulation stopIfParameterNotFound Logical. TRUE (default), error thrown additionalParams exist. FALSE, non-existent parameters  ignored. simulationRunOptions Optional instance SimulationRunOptions used simulation run.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/initializeSimulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a simulation and apply a set of parameters. — initializeSimulation","text":"","code":"if (FALSE) { simulation <- loadSimulation(filePath = modelPath) humanIndividualCharacteristics <- createIndividualCharacteristics(   species = Species$Human, population = HumanPopulation$European_ICRP_2002,   gender = Gender$Male, weight = 70 ) userParams <- readParametersFromXLS(parameterXLSPath) initializeSimulation(simulation, humanIndividualCharacteristics, userParams) simulationResults <- runSimulation(simulation = simulation) }"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/isParametersEqual.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two parameters are equal with respect to certain properties. — isParametersEqual","title":"Check if two parameters are equal with respect to certain properties. — isParametersEqual","text":"Check two parameters equal respect certain properties.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/isParametersEqual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two parameters are equal with respect to certain properties. — isParametersEqual","text":"","code":"isParametersEqual(   parameter1,   parameter2,   checkFormulaValues = FALSE,   compareFormulasByValue = FALSE )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/isParametersEqual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two parameters are equal with respect to certain properties. — isParametersEqual","text":"parameter1 First parameter compare parameter2 Second parameter compare checkFormulaValues TRUE, values explicit formulas always compared. Otherwise, values compared formulas overridden (isFixedValue == TRUE). FALSE default. compareFormulasByValue FALSE(default), formulas compared types string. TRUE, values compared.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/isParametersEqual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two parameters are equal with respect to certain properties. — isParametersEqual","text":"TRUE parameters considered equal, FALSE otherwise","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/isParametersEqual.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if two parameters are equal with respect to certain properties. — isParametersEqual","text":"parameters equal : paths parameters equal; types formulas differ (types checked: isConstant, isDistributed, isExplicit, isTable); Constant formulas different values; Distributed formulas different values (checking distribution) Explicit formulas: formula string equal, one parameter values fixed (formula overridden), parameter values fixed differ, checkFormulaValues TRUE values differ (disregarding overridden ) Table formulas: number points differ, points differ, one parameter values fixed (formula overridden), parameter values fixed differ.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/isTableFormulasEqual.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two table formulas are equal. — isTableFormulasEqual","title":"Check if two table formulas are equal. — isTableFormulasEqual","text":"Table formulas equal number points equal x-y value pairs equal two formulas","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/isTableFormulasEqual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two table formulas are equal. — isTableFormulasEqual","text":"","code":"isTableFormulasEqual(formula1, formula2)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/isTableFormulasEqual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two table formulas are equal. — isTableFormulasEqual","text":"formula1 First formula compare formula2 Second formula compare","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/isTableFormulasEqual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two table formulas are equal. — isTableFormulasEqual","text":"TRUE table formulas equal, FALSE otherwise","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/LLOQMode.html","id":null,"dir":"Reference","previous_headings":"","what":"Possible entries for the lloqMode argument of calculateMeans() — LLOQMode","title":"Possible entries for the lloqMode argument of calculateMeans() — LLOQMode","text":"Possible entries lloqMode argument calculateMeans()","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/LLOQMode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possible entries for the lloqMode argument of calculateMeans() — LLOQMode","text":"","code":"LLOQMode"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/LLOQMode.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Possible entries for the lloqMode argument of calculateMeans() — LLOQMode","text":"object class list length 4.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/loadObservedData.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data from excel — loadObservedData","title":"Load data from excel — loadObservedData","text":"Loads data sets excel. excel file containing data must located folder projectConfiguration$dataFolder named projectConfiguration$dataFile. Importer configuration file must located folder named projectConfiguration$dataImporterConfigurationFile.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/loadObservedData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data from excel — loadObservedData","text":"","code":"loadObservedData(projectConfiguration, sheets = NULL)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/loadObservedData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data from excel — loadObservedData","text":"projectConfiguration Object class ProjectConfiguration containing necessary information. sheets String list strings defining sheets load. NULL (default), sheets within file loaded.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/loadObservedData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data from excel — loadObservedData","text":"list DataSet objects","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/loadObservedData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load data from excel — loadObservedData","text":"","code":"if (FALSE) { # Create default project configuration projectConfiguration <- createDefaultProjectConfiguration() dataSets <- loadObservedData(projectConfiguration) }"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/loadScenarioResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Load simulated scenarios from csv and pkml. — loadScenarioResults","title":"Load simulated scenarios from csv and pkml. — loadScenarioResults","text":"Load simulated scenarios csv pkml.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/loadScenarioResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load simulated scenarios from csv and pkml. — loadScenarioResults","text":"","code":"loadScenarioResults(scenarioNames, resultsFolder)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/loadScenarioResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load simulated scenarios from csv and pkml. — loadScenarioResults","text":"scenarioNames Names simulated scenarios resultsFolder Path folder simulation results scv corresponding simulations pkml located.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/loadScenarioResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load simulated scenarios from csv and pkml. — loadScenarioResults","text":"named list, names scenario names, values lists entries simulation initialized Simulation object applied parameters, results SimulatioResults object produced running simulation, outputValues output values SimulationResults.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/loadScenarioResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load simulated scenarios from csv and pkml. — loadScenarioResults","text":"function requires simulation results corresponding simulation files located folder (resultsFolder) names scenarios.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/loadScenarioResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load simulated scenarios from csv and pkml. — loadScenarioResults","text":"","code":"if (FALSE) { # First simulate scenarios and save the results projectConfiguration <- esqlabsR::createDefaultProjectConfiguration() scenarioConfigurations <- readScenarioConfigurationFromExcel(   projectConfiguration = projectConfiguration ) simulatedScenarios <- runScenarios(   scenarioConfigurations = scenarioConfigurations,   saveSimulationsToPKML = TRUE ) saveResults(simulatedScenarios, projectConfiguration)  # Now load the results scnarioNames <- names(simulatedScenarios) simulatedScenarios <- loadScenarioResults(   scnarioNames = scnarioNames,   resultsFolder = pathToTheFolder ) }"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/pathFromClipboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Windows filepaths for R — pathFromClipboard","title":"Convert Windows filepaths for R — pathFromClipboard","text":"Converts Windows-like path (using \\) clipboard form readable R (using /).","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/pathFromClipboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Windows filepaths for R — pathFromClipboard","text":"","code":"pathFromClipboard(path = \"clipboard\")"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/pathFromClipboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Windows filepaths for R — pathFromClipboard","text":"path Path converted. \"clipboard\" (default), path queried clipboard.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/pathFromClipboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Windows filepaths for R — pathFromClipboard","text":"String representation file path / separator.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ProjectConfiguration.html","id":null,"dir":"Reference","previous_headings":"","what":"ProjectConfiguration — ProjectConfiguration","title":"ProjectConfiguration — ProjectConfiguration","text":"object storing configuration used project-wide","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ProjectConfiguration.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ProjectConfiguration — ProjectConfiguration","text":"ospsuite.utils::Printable -> ProjectConfiguration","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ProjectConfiguration.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ProjectConfiguration — ProjectConfiguration","text":"modelFolder Path folder pkml simulation files; relative \"Code\" folder. paramsFolder Path folder excel files parametrization; relative \"Code\" folder. paramsFile Name excel file global model parametrization. Must located \"paramsFolder\". individualsFile Name excel file individual-specific model parametrization. Must located \"paramsFolder\" populationParamsFile Name excel file population information. Must located \"paramsFolder\". scenarioDefinitionFile Name excel file scenario definitions. Must located \"paramsFolder\". scenarioApplicationsFile Name excel file scenario-specific parameters application protocol parameters. Must located \"paramsFolder\". plotsFile Name excel file plot definitions. Must located \"paramsFolder\". dataFolder Path folder experimental data files located dataFile Name excel file experimental data dataImporterConfigurationFile Name data importer configuration file xml format used load data. Must located \"dataFolder\" compoundPropertiesFile Path excel file containing information compounds model. Must located \"dataFolder\" outputFolder Path folder results saved ; relative \"Code\" folder","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ProjectConfiguration.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ProjectConfiguration — ProjectConfiguration","text":"ProjectConfiguration$print() ProjectConfiguration$clone()","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ProjectConfiguration.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"ProjectConfiguration — ProjectConfiguration","text":"Print object console","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ProjectConfiguration.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ProjectConfiguration — ProjectConfiguration","text":"","code":"ProjectConfiguration$print(...)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ProjectConfiguration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ProjectConfiguration — ProjectConfiguration","text":"... Rest arguments.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ProjectConfiguration.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ProjectConfiguration — ProjectConfiguration","text":"objects class cloneable method.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ProjectConfiguration.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ProjectConfiguration — ProjectConfiguration","text":"","code":"ProjectConfiguration$clone(deep = FALSE)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ProjectConfiguration.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ProjectConfiguration — ProjectConfiguration","text":"deep Whether make deep clone.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Read XLSX files using readxl::read_excel with suppressed warnings — readExcel","title":"Read XLSX files using readxl::read_excel with suppressed warnings — readExcel","text":"Read XLSX files using readxl::read_excel suppressed warnings","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read XLSX files using readxl::read_excel with suppressed warnings — readExcel","text":"","code":"readExcel(path, sheet = NULL, ...)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read XLSX files using readxl::read_excel with suppressed warnings — readExcel","text":"path Full path XLS/XLSX file sheet Name number sheet. NULL (default), first sheet file used. ... parameters can passed readxl::read_excel","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read XLSX files using readxl::read_excel with suppressed warnings — readExcel","text":"tibble contents excel sheet","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readIndividualCharacteristicsFromXLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Read individual characteristics from file — readIndividualCharacteristicsFromXLS","title":"Read individual characteristics from file — readIndividualCharacteristicsFromXLS","text":"Read individual characteristics file","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readIndividualCharacteristicsFromXLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read individual characteristics from file — readIndividualCharacteristicsFromXLS","text":"","code":"readIndividualCharacteristicsFromXLS(   XLSpath,   individualId,   sheet = \"IndividualBiometrics\",   nullIfNotFound = TRUE )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readIndividualCharacteristicsFromXLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read individual characteristics from file — readIndividualCharacteristicsFromXLS","text":"XLSpath Full path excel file individualId (String) Id individual stored IndividualId column. sheet Name sheet. NULL (default), first sheet file used. nullIfNotFound Boolean. TRUE (default), NULL returned entry give individualId exists. Otherwise, error thrown.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readIndividualCharacteristicsFromXLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read individual characteristics from file — readIndividualCharacteristicsFromXLS","text":"IndividualCharacteristics object","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readIndividualCharacteristicsFromXLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read individual characteristics from file — readIndividualCharacteristicsFromXLS","text":"Read individual characteristics excel sheet create IndividualCharacteristics-object. excel sheet must column IndividualId, Species, Population, Gender, Weight [kg], Height [cm], Age [year(s)], BMI.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readParametersFromXLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Read parameter values from a structured Excel file.\r\nEach excel sheet must consist of columns 'Container Path', 'Parameter Name',\r\n'Value', and 'Units' — readParametersFromXLS","title":"Read parameter values from a structured Excel file.\r\nEach excel sheet must consist of columns 'Container Path', 'Parameter Name',\r\n'Value', and 'Units' — readParametersFromXLS","text":"Read parameter values structured Excel file. excel sheet must consist columns 'Container Path', 'Parameter Name', 'Value', 'Units'","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readParametersFromXLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read parameter values from a structured Excel file.\r\nEach excel sheet must consist of columns 'Container Path', 'Parameter Name',\r\n'Value', and 'Units' — readParametersFromXLS","text":"","code":"readParametersFromXLS(paramsXLSpath, sheets = NULL)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readParametersFromXLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read parameter values from a structured Excel file.\r\nEach excel sheet must consist of columns 'Container Path', 'Parameter Name',\r\n'Value', and 'Units' — readParametersFromXLS","text":"paramsXLSpath Path excel file sheets Names excel sheets containing information parameters. Multiple sheets can processed. sheets provided, first one Excel file used.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readParametersFromXLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read parameter values from a structured Excel file.\r\nEach excel sheet must consist of columns 'Container Path', 'Parameter Name',\r\n'Value', and 'Units' — readParametersFromXLS","text":"list containing vectors 'paths' full paths parameters, 'values' values parameters, 'units' units values .","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readPopulationCharacteristicsFromXLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an excel file containing information about population and create a\r\nPopulationCharacteristics object — readPopulationCharacteristicsFromXLS","title":"Read an excel file containing information about population and create a\r\nPopulationCharacteristics object — readPopulationCharacteristicsFromXLS","text":"Read excel file containing information population create PopulationCharacteristics object","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readPopulationCharacteristicsFromXLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an excel file containing information about population and create a\r\nPopulationCharacteristics object — readPopulationCharacteristicsFromXLS","text":"","code":"readPopulationCharacteristicsFromXLS(XLSpath, populationName, sheet = NULL)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readPopulationCharacteristicsFromXLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an excel file containing information about population and create a\r\nPopulationCharacteristics object — readPopulationCharacteristicsFromXLS","text":"XLSpath Path excel file populationName Name population, defined \"PopulationName\" column sheet Name index sheet excel file. NULL, first sheet file used.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readPopulationCharacteristicsFromXLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an excel file containing information about population and create a\r\nPopulationCharacteristics object — readPopulationCharacteristicsFromXLS","text":"PopulationCharacteristics object based information excel file.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readScenarioConfigurationFromExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Read scenario definition(s) from excel file — readScenarioConfigurationFromExcel","title":"Read scenario definition(s) from excel file — readScenarioConfigurationFromExcel","text":"Read scenario definition(s) excel file","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readScenarioConfigurationFromExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read scenario definition(s) from excel file — readScenarioConfigurationFromExcel","text":"","code":"readScenarioConfigurationFromExcel(scenarioNames = NULL, projectConfiguration)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readScenarioConfigurationFromExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read scenario definition(s) from excel file — readScenarioConfigurationFromExcel","text":"scenarioNames Names scenarios defined excel file. NULL (default), scenarios specified excel file created. projectConfiguration ProjectConfiguration object holding base information","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readScenarioConfigurationFromExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read scenario definition(s) from excel file — readScenarioConfigurationFromExcel","text":"named list ScenarioConfiguration objects withe names list scenario names.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readScenarioConfigurationFromExcel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read scenario definition(s) from excel file — readScenarioConfigurationFromExcel","text":"Reads scenario definition excel file defined ProjectConfiguration creates ScenarioConfiguration objects new information. scenario specified scenarioNames found excel file, error thrown.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/readScenarioConfigurationFromExcel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read scenario definition(s) from excel file — readScenarioConfigurationFromExcel","text":"","code":"if (FALSE) { # Create default ProjectConfiguration projectConfiguration <- createDefaultProjectConfiguration() scenarioName <- \"MyScenario\" # Read scenario definition from excel scenarioConfiguration <- readScenarioConfigurationFromExcel(scenarioConfiguration)[[scenarioName]] }"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ospsuite.utils %||%","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/removeFromList.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove an entry from a list — removeFromList","title":"Remove an entry from a list — removeFromList","text":"Removes occurrences entry list. entry list nothing removed.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/removeFromList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove an entry from a list — removeFromList","text":"","code":"removeFromList(entry, listArg)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/removeFromList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove an entry from a list — removeFromList","text":"entry entry removed listArg list entry removed","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/removeFromList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove an entry from a list — removeFromList","text":"list without entry. input vector, converted list.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/removeFromList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove an entry from a list — removeFromList","text":"","code":"myList <- list(\"one\", \"two\", \"one\", \"three\") myList <- removeFromList(\"one\", myList) print(myList) #> [[1]] #> [1] \"two\" #>  #> [[2]] #> [1] \"three\" #>"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/runScenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a set of scenarios. — runScenarios","title":"Run a set of scenarios. — runScenarios","text":"Run set scenarios.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/runScenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a set of scenarios. — runScenarios","text":"","code":"runScenarios(   scenarioConfigurations,   customParams = NULL,   saveSimulationsToPKML = FALSE,   savePopulationToCSV = FALSE )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/runScenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a set of scenarios. — runScenarios","text":"scenarioConfigurations List ScenarioConfiguration objects simulated. customParams list containing vectors 'paths' full paths parameters, 'values' values parameters, 'units' units values . values applied model. saveSimulationsToPKML Logical, defaults FALSE. TRUE, initialized simulations saved PKML simulating. output folder Results/Simulations/<DateSuffix>. name file name scenario. savePopulationToCSV Logical, defaults FALSE. TRUE, populations population scenarios saved csv simulating. output folder Results/Populations/<DateSuffix>. name file name scenario suffix _population.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/runScenarios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a set of scenarios. — runScenarios","text":"named list, names scenario names, values lists entries simulation initialized Simulation object applied parameters, results SimulatioResults object produced running simulation, outputValues output values SimulationResults, population Population object scenario population simulation.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sampleRandomValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample a random value from a distribution — sampleRandomValue","title":"Sample a random value from a distribution — sampleRandomValue","text":"Sample random value distribution","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sampleRandomValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample a random value from a distribution — sampleRandomValue","text":"","code":"sampleRandomValue(distribution, mean, sd, n)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sampleRandomValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample a random value from a distribution — sampleRandomValue","text":"distribution type distribution random variable sampled . See Distributions list supported entries. mean Mean value random variable sd Standard deviation random variable n Size sample","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sampleRandomValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample a random value from a distribution — sampleRandomValue","text":"Numerical vector size n randomly sampled values","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/saveScenarioResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Save results of scenario simulations to csv. — saveScenarioResults","title":"Save results of scenario simulations to csv. — saveScenarioResults","text":"Save results scenario simulations csv.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/saveScenarioResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save results of scenario simulations to csv. — saveScenarioResults","text":"","code":"saveScenarioResults(   simulatedScenarios,   projectConfiguration,   outputFolder = NULL,   saveSimulationsToPKML = TRUE )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/saveScenarioResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save results of scenario simulations to csv. — saveScenarioResults","text":"simulatedScenarios Named list simulation, results, outputValues, population produced runScenarios(). projectConfiguration instance ProjectConfiguration outputFolder Optional - path folder results stored. NULL (default), sub-folder ProjectConfiguration$outputFolder/SimulationResults/<DateSuffix>. saveSimulationsToPKML TRUE (default), simulations corresponding results saved PKML along results.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/saveScenarioResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save results of scenario simulations to csv. — saveScenarioResults","text":"scenario, separate csv file created. scenario population simulation, population stored along results file name suffix _population. Results can read loadScenarioResults() function.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/saveScenarioResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save results of scenario simulations to csv. — saveScenarioResults","text":"","code":"if (FALSE) { projectConfiguration <- esqlabsR::createDefaultProjectConfiguration() scenarioConfigurations <- readScenarioConfigurationFromExcel(   projectConfiguration = projectConfiguration ) simulatedScenarios <- runScenarios(   scenarioConfigurations = scenarioConfigurations,   saveSimulationsToPKML = FALSE ) saveResults(simulatedScenarios, projectConfiguration) }"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":null,"dir":"Reference","previous_headings":"","what":"ScenarioConfiguration — ScenarioConfiguration","title":"ScenarioConfiguration — ScenarioConfiguration","text":"object storing configuration specific scenario","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ScenarioConfiguration — ScenarioConfiguration","text":"ospsuite.utils::Printable -> ScenarioConfiguration","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ScenarioConfiguration — ScenarioConfiguration","text":"scenarioName Name simulated scenario modelFile Name simulation loaded (must include extension \".pkml\"). Must located \"modelFolder\". applicationProtocol Name application protocol applied. Defined excel file \"ApplicationParameters.xlsx\" individualId Id individual specified \"IndividualParameters.xlsx\". NULL (default), individual defined simulation file simulated. populationId Id population specified \"PopulationParameters.xlsx\", sheet \"Demographics\". ScenarioConfguration$simulationType population, population created scenario simulated population simulation. outputPaths list output paths results calculated. NULL (default), outputs defined simulation used.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"ScenarioConfiguration — ScenarioConfiguration","text":"setTestParameters Boolean representing whether parameters defined TestParameters applied simulation simulateSteadyState Boolean representing whether simulation brought steady-state first readPopulationFromCSV Boolean representing whether new population created (value FALSE) existing population imported csv. simulationTime Simulation time minutes. NULL (default), simulation time defined Simulation object used. pointsPerMinute Resolution outputs points per minute steadyStateTime Time minutes simulate simulating steady-state. May NULL. paramSheets Names sheets parameters-excel file applied simulation simulationType Type simulation - \"Individual\" \"Population\". \"Population\", population characteristics created based information stored populationParamsFile. Default \"Individual\" simulationRunOptions Object type SimulationRunOptions passed simulation runs. NULL, default options used projectConfiguration ProjectConfiguration used scenarios. Read-customFunction function applied last step simulation initialization. Can applied advanced scenario configuration. function requires additional arguments, must defined customFunctionArgs list. object simulation can always accessed. customFunctionArgs Arguments thecustomFunction() Named list type list(argumentName = value)","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ScenarioConfiguration — ScenarioConfiguration","text":"ScenarioConfiguration$new() ScenarioConfiguration$addParamSheets() ScenarioConfiguration$removeParamSheets() ScenarioConfiguration$print() ScenarioConfiguration$clone()","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ScenarioConfiguration — ScenarioConfiguration","text":"Initialize new instance class","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ScenarioConfiguration — ScenarioConfiguration","text":"","code":"ScenarioConfiguration$new(projectConfiguration)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ScenarioConfiguration — ScenarioConfiguration","text":"projectConfiguration object class ProjectConfiguration.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ScenarioConfiguration — ScenarioConfiguration","text":"new ScenarioConfiguration object.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ScenarioConfiguration — ScenarioConfiguration","text":"","code":"\\dontrun{ #This example gets the current value of the \"Age\" parameter and multiplies #it by a factor coming from argument. #Assume that scenarioConfiguration has been created from excel. scenarioConfiguration$customFunction <- function( }"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"method-addparamsheets-","dir":"Reference","previous_headings":"","what":"Method addParamSheets()","title":"ScenarioConfiguration — ScenarioConfiguration","text":"Add names sheets parameters excel-file applied simulation","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ScenarioConfiguration — ScenarioConfiguration","text":"","code":"ScenarioConfiguration$addParamSheets(sheetNames)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ScenarioConfiguration — ScenarioConfiguration","text":"sheetNames name list names excel sheet","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"method-removeparamsheets-","dir":"Reference","previous_headings":"","what":"Method removeParamSheets()","title":"ScenarioConfiguration — ScenarioConfiguration","text":"Remove names sheets parameters excel-file list sheets paramSheets","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ScenarioConfiguration — ScenarioConfiguration","text":"","code":"ScenarioConfiguration$removeParamSheets(sheetNames = NULL)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ScenarioConfiguration — ScenarioConfiguration","text":"sheetNames name list names excel sheet. NULL (default), sheets removed","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"ScenarioConfiguration — ScenarioConfiguration","text":"Print object console","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ScenarioConfiguration — ScenarioConfiguration","text":"","code":"ScenarioConfiguration$print(...)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ScenarioConfiguration — ScenarioConfiguration","text":"... Rest arguments.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ScenarioConfiguration — ScenarioConfiguration","text":"objects class cloneable method.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ScenarioConfiguration — ScenarioConfiguration","text":"","code":"ScenarioConfiguration$clone(deep = FALSE)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ScenarioConfiguration.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"ScenarioConfiguration — ScenarioConfiguration","text":"deep Whether make deep clone.","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivityCalculation.html","id":null,"dir":"Reference","previous_headings":"","what":"Carry out and visualize sensitivity analysis (with OSPSuite) — sensitivityCalculation","title":"Carry out and visualize sensitivity analysis (with OSPSuite) — sensitivityCalculation","text":"Carry visualize sensitivity analysis (OSPSuite)","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivityCalculation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Carry out and visualize sensitivity analysis (with OSPSuite) — sensitivityCalculation","text":"","code":"sensitivityCalculation(   simulation,   outputPaths,   parameterPaths,   variationRange = c(seq(0.1, 1, by = 0.1), seq(2, 10, by = 1)),   pkParameters = c(\"C_max\", \"t_max\", \"AUC_inf\"),   pkDataFilePath = NULL,   simulationRunOptions = NULL )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivityCalculation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Carry out and visualize sensitivity analysis (with OSPSuite) — sensitivityCalculation","text":"simulation object type Simulation. outputPaths Path (vector paths) output(s) sensitivity analyzed. parameterPaths single vector parameter path(s) varied. variationRange Optional numeric vector defining scaling parameters. variation range applied specified parameters. specified, following vector used: c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 2, 3, 4, 5,  6, 7, 8, 9, 10). pkParameters vector names PK parameters sensitivities calculated. full set available standard PK parameters, run names(ospsuite::StandardPKParameter). default, following parameters considered: \"C_max\", \"t_max\", \"AUC_inf\". NULL, available PK-parameters calculated. can also specify custom PK parameters. pkDataFilePath Path excel file PK-parameter data saved. file already exists, overwritten. Default NULL, meaning data saved spreadsheet. simulationRunOptions Optional instance SimulationRunOptions used simulation run","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivityCalculation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Carry out and visualize sensitivity analysis (with OSPSuite) — sensitivityCalculation","text":"list containing following objects: SimulationResults specified output paths specified parameter paths data frame PK parameters","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivityCalculation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Carry out and visualize sensitivity analysis (with OSPSuite) — sensitivityCalculation","text":"","code":"if (FALSE) { simPath <- system.file(\"extdata\", \"Aciclovir.pkml\", package = \"ospsuite\") simulation <- loadSimulation(simPath) outputPaths <- \"Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)\" parameterPaths <- c(   \"Aciclovir|Lipophilicity\",   \"Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose\",   \"Neighborhoods|Kidney_pls_Kidney_ur|Aciclovir|Glomerular Filtration-GFR|GFR fraction\" )  # extract the results into a list of dataframes sensitivityCalculation(   simulation = simulation,   outputPaths = outputPaths,   parameterPaths = parameterPaths ) }"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivitySpiderPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity spider plot for PK parameters — sensitivitySpiderPlot","title":"Sensitivity spider plot for PK parameters — sensitivitySpiderPlot","text":"Sensitivity spider plot PK parameters","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivitySpiderPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity spider plot for PK parameters — sensitivitySpiderPlot","text":"","code":"sensitivitySpiderPlot(   sensitivityCalculation,   outputPaths = NULL,   parameterPaths = NULL,   pkParameters = NULL,   xAxisLog = TRUE,   yAxisLog = FALSE,   savePlots = FALSE,   outputFolder = \"\",   width = 16,   height = 9,   dpi = 300 )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivitySpiderPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity spider plot for PK parameters — sensitivitySpiderPlot","text":"sensitivityCalculation SensitivityCalculation object returned sensitivityCalculation(). outputPaths, parameterPaths, pkParameters single vector output path(s), parameter path(s), PK parameters displayed, respectively. NULL, included paths parameters present supplied SensitivityCalculation object displayed visualization. xAxisLog, yAxisLog Logical decides whether display axis logarithmic scale. savePlots Logical decides whether wish save created plot(s). saved default. Note multiple output paths model, multiple plots saved. outputFolder character string describing path folder plots need saved. path must relative current working directory. default (\"\"), plots saved current working directory (can found using getwd() function). parameter relevant savePlots set TRUE. width, height Plot size inches. supplied, uses size current graphics device. dpi Plot resolution. Also accepts string input: \"retina\" (320), \"print\" (300), \"screen\" (72). Applies raster output types.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivitySpiderPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity spider plot for PK parameters — sensitivitySpiderPlot","text":"single ggplot object single output path specified. list ggplot objects multiple output paths specified.","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivitySpiderPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sensitivity spider plot for PK parameters — sensitivitySpiderPlot","text":"","code":"if (FALSE) { simPath <- system.file(\"extdata\", \"Aciclovir.pkml\", package = \"ospsuite\") simulation <- loadSimulation(simPath) outputPaths <- \"Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)\" parameterPaths <- c(   \"Aciclovir|Lipophilicity\",   \"Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose\",   \"Neighborhoods|Kidney_pls_Kidney_ur|Aciclovir|Glomerular Filtration-GFR|GFR fraction\" )  # extract the results into a list of dataframes results <- sensitivityCalculation(   simulation = simulation,   outputPaths = outputPaths,   parameterPaths = parameterPaths )  # print plots sensitivitySpiderPlot(results)  # print and save plots if (FALSE) {   sensitivitySpiderPlot(     results,     savePlots = TRUE,     height = 6,     width = 12   ) } }"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivityTimeProfiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a concentration-time profile plot — sensitivityTimeProfiles","title":"Create a concentration-time profile plot — sensitivityTimeProfiles","text":"Create concentration-time profile plot","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivityTimeProfiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a concentration-time profile plot — sensitivityTimeProfiles","text":"","code":"sensitivityTimeProfiles(   sensitivityCalculation,   outputPaths = NULL,   parameterPaths = NULL,   xAxisLog = FALSE,   yAxisLog = TRUE,   palette = \"Cold\",   savePlots = FALSE,   outputFolder = \"\",   width = 16,   height = 9,   dpi = 300 )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivityTimeProfiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a concentration-time profile plot — sensitivityTimeProfiles","text":"sensitivityCalculation SensitivityCalculation object returned sensitivityCalculation(). outputPaths Path (vector paths) output(s) sensitivity analyzed. parameterPaths single vector parameter path(s) varied. xAxisLog, yAxisLog Logical decides whether display axis logarithmic scale. palette name palette used. Run hcl_palettes(type = \"qualitative\") available options. savePlots Logical decides whether wish save created plot(s). saved default. Note multiple output paths model, multiple plots saved. outputFolder character string describing path folder plots need saved. path must relative current working directory. default (\"\"), plots saved current working directory (can found using getwd() function). parameter relevant savePlots set TRUE. width, height Plot size inches. supplied, uses size current graphics device. dpi Plot resolution. Also accepts string input: \"retina\" (320), \"print\" (300), \"screen\" (72). Applies raster output types.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivityTimeProfiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a concentration-time profile plot — sensitivityTimeProfiles","text":"single ggplot object single output path specified. list ggplot objects multiple output paths specified.","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sensitivityTimeProfiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a concentration-time profile plot — sensitivityTimeProfiles","text":"","code":"if (FALSE) { simPath <- system.file(\"extdata\", \"Aciclovir.pkml\", package = \"ospsuite\") simulation <- loadSimulation(simPath) outputPaths <- \"Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)\" parameterPaths <- c(   \"Aciclovir|Lipophilicity\",   \"Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose\",   \"Neighborhoods|Kidney_pls_Kidney_ur|Aciclovir|Glomerular Filtration-GFR|GFR fraction\" )  # extract the results into a list of dataframes results <- sensitivityCalculation(   simulation = simulation,   outputPaths = outputPaths,   parameterPaths = parameterPaths )  # print plots sensitivityTimeProfiles(results)  # print and save plots if (FALSE) {   sensitivityTimeProfiles(     results,     savePlots = TRUE,     height = 6,     width = 12   ) } }"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/setApplications.html","id":null,"dir":"Reference","previous_headings":"","what":"Set an application protocol in a Simulation from the excel file. — setApplications","title":"Set an application protocol in a Simulation from the excel file. — setApplications","text":"Set application protocol Simulation excel file.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/setApplications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set an application protocol in a Simulation from the excel file. — setApplications","text":"","code":"setApplications(simulation, scenarioConfiguration)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/setApplications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set an application protocol in a Simulation from the excel file. — setApplications","text":"simulation Simulation object modified. scenarioConfiguration ScenarioConfiguration object holding name application protocol.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/setApplications.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set an application protocol in a Simulation from the excel file. — setApplications","text":"Set parameter values describing application protocol defined scenario configuration.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/setParameterValuesByPathWithCondition.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the values of parameters in the simulation by path, if the condition is true. — setParameterValuesByPathWithCondition","title":"Set the values of parameters in the simulation by path, if the condition is true. — setParameterValuesByPathWithCondition","text":"Set values parameters simulation path, condition true.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/setParameterValuesByPathWithCondition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the values of parameters in the simulation by path, if the condition is true. — setParameterValuesByPathWithCondition","text":"","code":"setParameterValuesByPathWithCondition(   parameterPaths,   values,   simulation,   condition = function(path) {      TRUE  },   units = NULL )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/setParameterValuesByPathWithCondition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the values of parameters in the simulation by path, if the condition is true. — setParameterValuesByPathWithCondition","text":"parameterPaths single list parameter path values numeric value assigned parameters vector numeric values, value one parameter changed. Must length 'parameterPaths' simulation Simulation used retrieve parameter instances given paths. condition function receives parameter path argument returns TRUE FALSE units string list strings defining units values. NULL (default), values assumed base units. NULL, must length 'parameterPaths'.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/setParameterValuesByPathWithCondition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the values of parameters in the simulation by path, if the condition is true. — setParameterValuesByPathWithCondition","text":"","code":"simPath <- system.file(\"extdata\", \"simple.pkml\", package = \"ospsuite\") sim <- loadSimulation(simPath) condition <- function(path) {   ospsuite::isExplicitFormulaByPath(     path = path,     simulation = sim   ) } setParameterValuesByPathWithCondition(   c(\"Organism|Liver|Volume\", \"Organism|Volume\"),   c(2, 3),   sim,   condition )"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sineFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Sine function — sineFunction","title":"Sine function — sineFunction","text":"Sine function","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sineFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sine function — sineFunction","text":"","code":"sineFunction(x, amplitude, period, xOffset, yOffset)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sineFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sine function — sineFunction","text":"x Value effector amplitude Numeric, amplitude sine function period Numeric, amplitude sine function xOffset Offset function x-axis yOffset Offset function y-axis","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sineFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sine function — sineFunction","text":"Value sine function x.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sourceAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Source all .R files located in a specific folder — sourceAll","title":"Source all .R files located in a specific folder — sourceAll","text":"Source .R files located specific folder","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sourceAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Source all .R files located in a specific folder — sourceAll","text":"","code":"sourceAll(folderPath, recursive = FALSE)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/sourceAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Source all .R files located in a specific folder — sourceAll","text":"folderPath Path folder .R files located recursive TRUE, contents sub-folders also sourced, otherwise files located directly directory considered. Default FALSE.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/startFunctionVisualizer.html","id":null,"dir":"Reference","previous_headings":"","what":"Start function visualizer — startFunctionVisualizer","title":"Start function visualizer — startFunctionVisualizer","text":"Start function visualizer","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/startFunctionVisualizer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start function visualizer — startFunctionVisualizer","text":"","code":"startFunctionVisualizer()"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/startFunctionVisualizer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start function visualizer — startFunctionVisualizer","text":"Starts shiny app visualizing function values.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/startUnitConverter.html","id":null,"dir":"Reference","previous_headings":"","what":"Start unit converter — startUnitConverter","title":"Start unit converter — startUnitConverter","text":"Start unit converter","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/startUnitConverter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start unit converter — startUnitConverter","text":"","code":"startUnitConverter()"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/startUnitConverter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start unit converter — startUnitConverter","text":"Starts shiny app computing unit conversions.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/stringToNum.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert string to numeric — stringToNum","title":"Convert string to numeric — stringToNum","text":"Convert string numeric","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/stringToNum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert string to numeric — stringToNum","text":"","code":"stringToNum(string, lloqMode = LLOQMode$`LLOQ/2`, uloqMode = ULOQMode$ULOQ)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/stringToNum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert string to numeric — stringToNum","text":"string string list strings converted numeric values lloqMode treat entries LLOQ, .e., form \"<2\": LLOQ/2 (default): return number divided 2, LLOQ: return numerical value, ZERO: return 0, ignore: return NA uloqMode treat entries ULOQ, .e., form \">2\": ULOQ: return numerical value, ignore: return NA","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/stringToNum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert string to numeric — stringToNum","text":"numeric value list numeric values","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/stringToNum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert string to numeric — stringToNum","text":"Tries convert string numeric .numeric(). conversion fails returns NA, value tested LLOQ- ULOQ value, .e., form \"<2\" \">2\", respectively. case, returned value defined parameters lloqMode uloqMode. case string converted numeric, NA returned.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ULOQMode.html","id":null,"dir":"Reference","previous_headings":"","what":"Possible modes to treat values above the upper limit of quantification. — ULOQMode","title":"Possible modes to treat values above the upper limit of quantification. — ULOQMode","text":"Possible modes treat values upper limit quantification.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ULOQMode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possible modes to treat values above the upper limit of quantification. — ULOQMode","text":"","code":"ULOQMode"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/ULOQMode.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Possible modes to treat values above the upper limit of quantification. — ULOQMode","text":"object class list length 2.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/writeExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Write data to excel — writeExcel","title":"Write data to excel — writeExcel","text":"Write data excel","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/writeExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write data to excel — writeExcel","text":"","code":"writeExcel(data, path, col_names = TRUE)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/writeExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write data to excel — writeExcel","text":"data Data frame named list data frames sheets xlsx path file name write col_names write column names top file?","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/writeExcel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write data to excel — writeExcel","text":"Uses writexl::write_xlsx write data excel. folder exist, creates folder(s) recursively.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/writeIndividualToXLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parameter set describing an individual and write it to the Excel file — writeIndividualToXLS","title":"Create a parameter set describing an individual and write it to the Excel file — writeIndividualToXLS","text":"Create parameter set describing individual write Excel file","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/writeIndividualToXLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parameter set describing an individual and write it to the Excel file — writeIndividualToXLS","text":"","code":"writeIndividualToXLS(individualCharacteristics, outputXLSPath)"},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/writeIndividualToXLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a parameter set describing an individual and write it to the Excel file — writeIndividualToXLS","text":"individualCharacteristics IndividualCharacteristics object describing individual. See createIndividualCharacterstics information. outputXLSPath Path Excel file parameter set written ","code":""},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/reference/writeIndividualToXLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a parameter set describing an individual and write it to the Excel file — writeIndividualToXLS","text":"","code":"if (FALSE) { simulation <- loadSimulation(pathToPKML) humanIndividualCharacteristics <- createIndividualCharacteristics(   species = Species$Human, population = HumanPopulation$European_ICRP_2002,   gender = Gender$Male, weight = 70 ) writeIndividualToXLS(humanIndividualCharacteristics, pathToExcelFile) }"},{"path":[]},{"path":"https://esqlabs.github.io/esqlabsR/dev/news/index.html","id":"new-functionalities-5-0-0","dir":"Changelog","previous_headings":"","what":"New functionalities","title":"esqlabsR 5.0.0","text":"Plots can created calling new function createPlotsFromExcel(). requires input parameters simulatedScenarios (list simulated scenarios returned runScenarios()), observedData (list DataSet objects) ProjectConfiguration object projectConfiguration. New function createDataCombinedFromExcel() creates DataCombined objects defined Plots.xlsx file. New function saveScenarioResults() save results produced runScenarios() function csv files corresponding simulations pkml files. New function loadScenarioResults() load results csv files structure produced runScenarios() function. ScenarioConfiguration supports custom functions modify Simulation object last step scenario initialization. , ScenarioConfiguration class gets new fields customFunction customFunctionArgs. New function compareSimulation() compare two simulations differences. runScenarios() also returns Population object population simulations. runScenarios() gets new argument savePopulationToCSV, default value FALSE.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/news/index.html","id":"breaking-changes-5-0-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"esqlabsR 5.0.0","text":"Function compareSimulationParameters() removed replaced compareSimulations() Scenarios excel file gets additional columns SteadyStateTime, SteadyStateTimeUnit, PopulationId, OutputPathsIds. readScenarioConfigurationFromExcel() new signature requires list scenarioNames ProjectConfiguration. output named list ScenarioConfiguration objects. initializeScenario() update scenario configuration excel . Output paths set global variable OutputPaths respective field ScenarioConfgiruation ProjectConfiguration field $outputDevice . Enum GraphicsDevices removed.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/news/index.html","id":"major-changes-5-0-0","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"esqlabsR 5.0.0","text":"Paths model outputs defined excel file Scenarios.xlsx. sheet OutputPaths, create entry output. column OutputPath full path output, OutputPathId identifier conveniently allows select correct output. Scenarios sheet, enter IDs paths outputs generated , separated ,, e.g. Aciclovir_PVB, Aciclovir_fat_cell. outputs specified, outputs defined simulation .pkml file produced. ScenarioConfiguration gets new field populationId, specifying id population defined PopulationParameters.xlsx file, sheet Demographics. field NULL, scenario simulated individual simulation, otherwise population simulation performed. ScenarioConfiguration gets new field readPopulationFromCSV. FALSE (default), new population created defined population demographics. TRUE, simulation imported csv sheet located folder Parameters/Populations named PopulationId. runScenarios() supports scenario configurations population simulations Target folder saving *.pkml simulations runScenarios(scenarioConfigurations, saveSimulationsToPKML = TRUE) changed Models/Simulations/<DateSuffix> Results/SimulationResults/<DateSuffix>. sensitivityCalculation() - fixed bug wrong calculation sensitivity values. Please aware results produced earlier versions wrong. ScenarioConfiguration gets new field outputPaths list output paths results calculated. NULL (default), outputs defined simulation used. workflow running scenarios changed : Create RunConfiguration createDefaultProjectConfiguration() Create ScenarioConfigurations, e.g. readScenarioConfigurationFromExcel(scenarioNames, projectConfiguration) Run scenarios runScenarios(scenarioConfigurations) ProjectConfiguration gets new field plotsFile. name excel file plot definitions must located paramsFolder. defining individual species human ScenarioConfiguration applying human model, missing species-specific parameters applied scaling works properly. Supported scalingsa : Human rat, human monkey, human rabbit.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/news/index.html","id":"minor-changes-5-0-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"esqlabsR 5.0.0","text":"Function stringToNum() gets additional arguments lloqMode uloqMode determine entries type “<number” “>number” treated. readScenarioConfigurationFromExcel() read scenarios defined Scenarios.xlsx file scenario names specified (argument scenarioNames = NULL). Default name excel file definition individual biometrics changed IndividualPhysiology.xlsx IndividualBiometrics.xlsx. Dark grey frame around legends default.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/news/index.html","id":"esqlabsr-400","dir":"Changelog","previous_headings":"","what":"esqlabsR 4.0.0","title":"esqlabsR 4.0.0","text":"MAJOR CHANGES Three new functions create configuration objects needed data visualization workflows: createEsqlabsPlotConfiguration() createEsqlabsPlotGridConfiguration() createEsqlabsExportConfiguration() New function getAllApplicationParameters() returns parameters applications simulation New function exportParametersToXLS() write parameter information excel file can loaded MoBi R using readParametersFromXLS() function. New function writeExcel() wrapper creating directory (present) writing excel file using writexl::write_xlsx(). BREAKING CHANGES package requires R version >=4.1. package gains new dependencies: {ospsuite.parameteridentification} {tlf}. Function getSteadyState() moved package ospsuite.parameteridentification. Function loadObservedData() requires ProjectConfiguration instead ScenarioConfiguration. DataMapping, DataMappingConfiguration, XYData, DataConfiguration associated functions creating standard figures moved esqlabsRLegacy package.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/news/index.html","id":"esqlabsr-300","dir":"Changelog","previous_headings":"","what":"esqlabsR 3.0.0","title":"esqlabsR 3.0.0","text":"NEW FUNCTIONS carry visualize sensitivity analysis: sensitivityCalculation() sensitivitySpiderPlot() sensitivityTimeProfiles() Classes functions standard esqLABS simulation workflow: ProjectConfiguration ScenarioConfiguration createDefaultProjectConfiguration() readScenarioConfigurationFromExcel() setApplications() initializeScenario() initializeScenario() Maintenance bug fixes. package gains new dependency: {ospsuite.utils}.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/news/index.html","id":"esqlabsr-200","dir":"Changelog","previous_headings":"","what":"esqlabsR 2.0.0","title":"esqlabsR 2.0.0","text":"Maintenance bug fixes.","code":""},{"path":"https://esqlabs.github.io/esqlabsR/dev/news/index.html","id":"esqlabsr-100","dir":"Changelog","previous_headings":"","what":"esqlabsR 1.0.0","title":"esqlabsR 1.0.0","text":"Initial release package.","code":""}]
