% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sensitivitySpiderPlot.R
\name{sensitivitySpiderPlot}
\alias{sensitivitySpiderPlot}
\title{Sensitivity spider plot for PK parameters}
\usage{
sensitivitySpiderPlot(
  sensitivityAnalysis,
  xAxisLog = TRUE,
  yAxisLog = FALSE,
  savePlots = FALSE,
  width = NA,
  height = NA,
  units = c("in", "cm", "mm", "px"),
  dpi = 300
)
}
\arguments{
\item{sensitivityAnalysis}{The \code{SensitivityAnalysis} object returned by
\code{esqlabsR::sensitivityCalculation()}.}

\item{xAxisLog, yAxisLog}{Logical that decides whether to display the axis on
logarithmic scale.}

\item{savePlots}{Logical that decides whether you wish to save created
plot(s). They are not saved by default. Note that if there are multiple
output paths in your model, there will be multiple plots that will be saved.}

\item{width}{Plot size in \code{units} ("in", "cm", "mm", or "px").
If not supplied, uses the size of current graphics device.}

\item{height}{Plot size in \code{units} ("in", "cm", "mm", or "px").
If not supplied, uses the size of current graphics device.}

\item{units}{Plot size in \code{units} ("in", "cm", "mm", or "px").
If not supplied, uses the size of current graphics device.}

\item{dpi}{Plot resolution. Also accepts a string input: "retina" (320),
"print" (300), or "screen" (72). Applies only to raster output types.}
}
\value{
A list of dataframes with time-series and PK parameters data.

This function also prints Concentration-time profile plots and Sensitivity
spider plots.
}
\description{
Sensitivity spider plot for PK parameters
}
\examples{

library(ospsuite)

simPath <- system.file("extdata", "Aciclovir.pkml", package = "esqlabsR")
simulation <- loadSimulation(simPath)
outputPaths <- "Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)"
parameterPaths <- c(
  "Aciclovir|Lipophilicity",
  "Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose",
  "Neighborhoods|Kidney_pls_Kidney_ur|Aciclovir|Glomerular Filtration-GFR|GFR fraction"
)

# extract the results into a list of dataframes
results <- sensitivityCalculation(
  simulation = simulation,
  outputPaths = outputPaths,
  parameterPaths = parameterPaths
)

# print plots
sensitivitySpiderPlot(results)

# print and save plots
if (FALSE) {
  sensitivitySpiderPlot(
    results,
    savePlots = TRUE,
    units = "in",
    height = 6,
    width = 12
  )
}

}
