% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-scenarios.R
\name{saveScenarioResults}
\alias{saveScenarioResults}
\title{Save results of scenario simulations to csv.}
\usage{
saveScenarioResults(
  simulatedScenariosResults,
  projectConfiguration,
  outputFolder = NULL,
  saveSimulationsToPKML = TRUE
)
}
\arguments{
\item{simulatedScenariosResults}{Named list with \code{simulation}, \code{results}, \code{outputValues},
and \code{population} as produced by \code{runScenarios()}.}

\item{projectConfiguration}{An instance of \code{ProjectConfiguration}}

\item{outputFolder}{Optional - path to the folder where the results will be
stored. If \code{NULL} (default), a sub-folder in
\verb{ProjectConfiguration$outputFolder/SimulationResults/<DateSuffix>}.}

\item{saveSimulationsToPKML}{If \code{TRUE} (default), simulations corresponding to
the results are saved to PKML along with the results.}
}
\value{
\code{outputFolder} or the created output folder path, if no \code{outputFolder} was provided.
}
\description{
Save results of scenario simulations to csv.
}
\details{
For each scenario, a separate csv file will be created. If the scenario
is a population simulation, a population is stored along with the results with
the file name suffix \verb{_population}. Results can be read with the \code{loadScenarioResults()} function.
}
\examples{
\dontrun{
projectConfiguration <- esqlabsR::createProjectConfiguration()
scenarioConfigurations <- readScenarioConfigurationFromExcel(
  projectConfiguration = projectConfiguration
)
scenarios <- createScenarios(scenarioConfigurations = scenarioConfigurations)
simulatedScenariosResults <- runScenarios(
  scenarios = scenarios
)
saveScenarioResults(simulatedScenariosResults, projectConfiguration)
}
}
