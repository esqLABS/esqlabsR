% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ScenarioConfiguration.R
\docType{class}
\name{ScenarioConfiguration}
\alias{ScenarioConfiguration}
\title{ScenarioConfiguration}
\description{
An object storing configuration of a specific scenario
}
\section{Super class}{
\code{\link[ospsuite.utils:Printable]{ospsuite.utils::Printable}} -> \code{ScenarioConfiguration}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{scenarioName}}{Name of the simulated scenario}

\item{\code{modelFile}}{Name of the simulation to be loaded (must include the
extension ".pkml"). Must be located in the "modelFolder".}

\item{\code{applicationProtocol}}{Name of the application protocol to be applied. Defined
in the excel file "ApplicationParameters.xlsx"}

\item{\code{outputDevice}}{Output target of the plot. If \code{NULL} (default), the figure is created in the default "plot"
output. Other values indicate output into a file. A list of supported outputs is provided in \code{GraphicsDevices}-enum.}

\item{\code{individualId}}{Id of the individual. If \code{NULL} (default), the individual as defined in the simulation file will be simulated.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{setTestParameters}}{Boolean representing whether parameters defined in \code{TestParameters} are to be applied
to the simulation}

\item{\code{simulateSteadyState}}{Boolean representing whether the simulation will be brought to a steady-state first}

\item{\code{simulationTime}}{Boolean representing whether the simulation will be brought to a steady-state first}

\item{\code{pointsPerMinute}}{Resultion of the ouputs in points per minute}

\item{\code{steadyStateTime}}{Time in minutes to simulate if simulating steady-state. May be NULL}

\item{\code{paramSheets}}{Names of the sheets from the parameters-excel file that will be applied to the simulation}

\item{\code{simulationType}}{Type of the simulation - "Individual" or "Population". If "Population", population characteristics
are created based on information stored in \code{populationParamsFile}.
Default is "Individual"}

\item{\code{simulationRunOptions}}{Object of type \code{SimulationRunOptions} that will be passed
to simulation runs. If \code{NULL}, default options are used}

\item{\code{projectConfiguration}}{\code{ProjectConfiguration} that will be used in scenarios.
Read-only}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ScenarioConfiguration-new}{\code{ScenarioConfiguration$new()}}
\item \href{#method-ScenarioConfiguration-addParamSheets}{\code{ScenarioConfiguration$addParamSheets()}}
\item \href{#method-ScenarioConfiguration-removeParamSheets}{\code{ScenarioConfiguration$removeParamSheets()}}
\item \href{#method-ScenarioConfiguration-print}{\code{ScenarioConfiguration$print()}}
\item \href{#method-ScenarioConfiguration-clone}{\code{ScenarioConfiguration$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ScenarioConfiguration-new"></a>}}
\if{latex}{\out{\hypertarget{method-ScenarioConfiguration-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new instance of the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScenarioConfiguration$new(projectConfiguration)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{projectConfiguration}}{An object of class \code{ProjectConfiguration}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{ScenarioConfiguration} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ScenarioConfiguration-addParamSheets"></a>}}
\if{latex}{\out{\hypertarget{method-ScenarioConfiguration-addParamSheets}{}}}
\subsection{Method \code{addParamSheets()}}{
Add the names of sheets in the parameters excel-file
that will be applied to the simulation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScenarioConfiguration$addParamSheets(sheetNames)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheetNames}}{A name or a list of names of the excel sheet}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ScenarioConfiguration-removeParamSheets"></a>}}
\if{latex}{\out{\hypertarget{method-ScenarioConfiguration-removeParamSheets}{}}}
\subsection{Method \code{removeParamSheets()}}{
Remove the names of sheets in the parameters excel-file
from the list of sheets \code{paramSheets}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScenarioConfiguration$removeParamSheets(sheetNames = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheetNames}}{A name or a list of names of the excel sheet.
If \code{NULL} (default), all sheets are removed}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ScenarioConfiguration-print"></a>}}
\if{latex}{\out{\hypertarget{method-ScenarioConfiguration-print}{}}}
\subsection{Method \code{print()}}{
Print the object to the console
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScenarioConfiguration$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Rest arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ScenarioConfiguration-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ScenarioConfiguration-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScenarioConfiguration$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
