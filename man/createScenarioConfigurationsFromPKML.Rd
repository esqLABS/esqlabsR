% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-scenario-configuration.R
\name{createScenarioConfigurationsFromPKML}
\alias{createScenarioConfigurationsFromPKML}
\title{Create scenario configurations from PKML files}
\usage{
createScenarioConfigurationsFromPKML(
  pkmlFilePaths,
  projectConfiguration,
  scenarioNames = NULL,
  individualId = NULL,
  populationId = NULL,
  applicationProtocols = NULL,
  paramSheets = NULL,
  outputPaths = NULL,
  simulationTime = NULL,
  simulationTimeUnit = NULL,
  steadyState = FALSE,
  steadyStateTime = NULL,
  steadyStateTimeUnit = NULL,
  readPopulationFromCSV = FALSE
)
}
\arguments{
\item{pkmlFilePaths}{Paths to PKML files to create scenarios from}

\item{projectConfiguration}{A \code{ProjectConfiguration} object holding base information}

\item{scenarioNames}{Optional custom names for the scenarios. If \code{NULL} (default),
scenario names will be extracted from the simulation names in the PKML files.}

\item{individualId}{Optional individual ID to use for all scenarios. If \code{NULL} (default),
no individual will be specified}

\item{populationId}{Optional population ID to use for all scenarios. If \code{NULL} (default),
no population will be specified}

\item{applicationProtocols}{Optional application protocol names to use for scenarios.
If \code{NULL} (default), application protocols will be extracted from the PKML file with all its parameters.}

\item{paramSheets}{Optional parameter sheet names to apply to scenarios.
If \code{NULL} (default), no parameter sheets will be applied}

\item{outputPaths}{Optional output paths to use for scenarios. If \code{NULL} (default),
output paths will be extracted from the PKML files}

\item{simulationTime}{Optional simulation time to use for scenarios. If \code{NULL} (default),
simulation time will be extracted from the PKML files}

\item{simulationTimeUnit}{Optional simulation time unit. Only used when \code{simulationTime} is provided.
If \code{NULL} (default), will be extracted from the PKML file's output schema intervals, or set to "min" (minutes) if not available}

\item{steadyState}{Whether to simulate steady-state. Default is \code{FALSE}}

\item{steadyStateTime}{Steady-state time. Only used when \code{steadyState = TRUE}.
If \code{NULL} (default), no steady-state time will be set.}

\item{steadyStateTimeUnit}{Steady-state time unit. Only used when \code{steadyState = TRUE} and \code{steadyStateTime} is provided.
If \code{NULL} (default), "min" will be used.}

\item{readPopulationFromCSV}{Whether to read population from CSV. Default is \code{FALSE}}
}
\value{
A named list of \code{ScenarioConfiguration} objects with the names being
the scenario names
}
\description{
Creates scenario configurations from PKML files by extracting available information
such as applications, output paths, and simulation time settings. This function
creates scenario configuration objects.
}
\details{
This function extracts the following information from PKML files:
\itemize{
\item \strong{Applications}: All application protocols defined in the simulation
\item \strong{Output paths}: All selected outputs for the simulation
\item \strong{Simulation time}: Time intervals with start time, end time, and resolution
\item \strong{Simulation time unit}: Time unit from the output schema intervals (e.g., "h" for hours)
}

The function creates scenario configurations but does not write them to Excel files.
Use \code{addScenarioConfigurationsToExcel()} to add the scenarios to the project's Excel files.
}
\examples{
\dontrun{
# Create default project configuration
projectConfiguration <- createDefaultProjectConfiguration()

# Create scenarios from a single PKML file
pkmlPath <- "path/to/simulation.pkml"
scenarios <- createScenarioConfigurationsFromPKML(
  pkmlFilePaths = pkmlPath,
  projectConfiguration = projectConfiguration
)

# Add scenarios to Excel configuration
addScenarioConfigurationsToExcel(
  scenarioConfigurations = scenarios,
  projectConfiguration = projectConfiguration
)

# Create scenarios from multiple PKML files with custom names
pkmlPaths <- c("path/to/sim1.pkml", "path/to/sim2.pkml")
scenarios <- createScenarioConfigurationsFromPKML(
  pkmlFilePaths = pkmlPaths,
  projectConfiguration = projectConfiguration,
  scenarioNames = c("Scenario1", "Scenario2")
)

# Add multiple scenarios to configuration
addScenarioConfigurationsToExcel(
  scenarioConfigurations = scenarios,
  projectConfiguration = projectConfiguration
)
}
}
