% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-scenario-configuration.R
\name{addScenarioConfigurationsToExcel}
\alias{addScenarioConfigurationsToExcel}
\title{Add scenario configurations to project Excel files}
\usage{
addScenarioConfigurationsToExcel(
  scenarioConfigurations,
  projectConfiguration,
  appendToExisting = TRUE
)
}
\arguments{
\item{scenarioConfigurations}{A named list of \code{ScenarioConfiguration} objects
to add to the project}

\item{projectConfiguration}{A \code{ProjectConfiguration} object holding base information}

\item{appendToExisting}{Whether to append new scenarios to existing ones in the
scenarios file. If \code{FALSE}, the ENTIRE scenarios file will be overwritten with
only the new scenarios. If \code{TRUE} (default), new scenarios will be added to existing ones}
}
\value{
Invisibly returns the names of the added scenarios
}
\description{
Adds scenario configurations to the project's Scenarios.xlsx file and ensures
that required application protocol sheets exist in the Applications.xlsx file.
This function handles the Excel file operations for adding scenarios to a project.
}
\details{
This function performs the following operations:
\itemize{
\item Checks for duplicate scenario names if \code{appendToExisting} is \code{TRUE}
\item Creates missing application protocol sheets in Applications.xlsx
\item Writes scenario configurations to the Scenarios.xlsx file
}

The function ensures that the Excel files are properly structured and that
all required sheets and headers are present.
}
\examples{
\dontrun{
# Create scenario configurations from PKML
scenarios <- createScenarioConfigurationsFromPKML(
  pkmlFilePaths = "path/to/simulation.pkml",
  projectConfiguration = projectConfiguration
)

# Add scenarios to project Excel files
addScenarioConfigurationsToExcel(
  scenarioConfigurations = scenarios,
  projectConfiguration = projectConfiguration,
  appendToExisting = TRUE
)
}
}
