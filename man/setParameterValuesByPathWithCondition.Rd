% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-parameters.R
\name{setParameterValuesByPathWithCondition}
\alias{setParameterValuesByPathWithCondition}
\title{Set the values of parameters in the simulation by path, if the \code{condition} is true.}
\usage{
setParameterValuesByPathWithCondition(
  parameterPaths,
  values,
  simulation,
  condition = function(path) {
     TRUE
 },
  units = NULL
)
}
\arguments{
\item{parameterPaths}{A single or a list of parameter path}

\item{values}{A numeric value that should be assigned to the parameters or a vector
of numeric values, if the value of more than one parameter should be changed. Must have the same
length as 'parameterPaths'}

\item{simulation}{Simulation used to retrieve parameter instances from given paths.}

\item{condition}{A function that receives a parameter path as an argument
and returns \code{TRUE} of \code{FALSE}}

\item{units}{A string or a list of strings defining the units of the \code{values}. If \code{NULL} (default), values
are assumed to be in base units. If not \code{NULL}, must have the same length as 'parameterPaths'.}
}
\description{
Set the values of parameters in the simulation by path, if the \code{condition} is true.
}
\examples{
\dontrun{

simPath <- system.file("extdata", "simple.pkml", package = "ospsuite")
sim <- loadSimulation(simPath)
condition <- function(path) {
  task <- ospsuite:::getContainerTask()
  !rClr::clrCall(task, "IsExplicitFormulaByPath", simulation$ref, enc2utf8(path))
}
setParameterValuesByPathWithCondition(
  c("Organism|Liver|Volume", "Organism|Volume"),
  c(2, 3),
  sim,
  condition
)
}
}
