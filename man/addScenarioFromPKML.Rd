% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-scenario-configuration.R
\name{addScenarioFromPKML}
\alias{addScenarioFromPKML}
\title{Add scenarios from PKML files}
\usage{
addScenarioFromPKML(
  pkmlFilePaths,
  projectConfiguration,
  scenarioNames = NULL,
  individualId = NULL,
  populationId = NULL,
  applicationProtocols = NULL,
  paramSheets = NULL,
  outputPaths = NULL,
  simulationTime = NULL,
  simulationTimeUnit = NULL,
  steadyState = FALSE,
  steadyStateTime = 1000,
  steadyStateTimeUnit = "min",
  readPopulationFromCSV = FALSE,
  appendToExisting = TRUE
)
}
\arguments{
\item{pkmlFilePaths}{Paths to PKML files to create scenarios from}

\item{projectConfiguration}{A \code{ProjectConfiguration} object holding base information}

\item{scenarioNames}{Optional custom names for the scenarios. If \code{NULL} (default),
scenario names will be derived from the PKML file names}

\item{individualId}{Optional individual ID to use for all scenarios. If \code{NULL} (default),
no individual will be specified}

\item{populationId}{Optional population ID to use for all scenarios. If \code{NULL} (default),
no population will be specified}

\item{applicationProtocols}{Optional application protocol names to use for scenarios.
If \code{NULL} (default), application protocols will be extracted from the PKML files}

\item{paramSheets}{Optional parameter sheet names to apply to scenarios.
If \code{NULL} (default), only "Global" will be used}

\item{outputPaths}{Optional output paths to use for scenarios. If \code{NULL} (default),
output paths will be extracted from the PKML files}

\item{simulationTime}{Optional simulation time to use for scenarios. If \code{NULL} (default),
simulation time will be extracted from the PKML files}

\item{simulationTimeUnit}{Optional simulation time unit. If \code{NULL} (default),
will be extracted from the PKML file's output schema intervals, or set to "min" (minutes) if not available}

\item{steadyState}{Whether to simulate steady-state. Default is \code{FALSE}}

\item{steadyStateTime}{Steady-state time in minutes. Default is \code{1000}}

\item{steadyStateTimeUnit}{Steady-state time unit. Default is "min"}

\item{readPopulationFromCSV}{Whether to read population from CSV. Default is \code{FALSE}}

\item{appendToExisting}{Whether to append new scenarios to existing ones in the
scenarios file. If \code{FALSE} (default), existing scenarios will be overwritten}
}
\value{
A named list of \code{ScenarioConfiguration} objects with the names being
the scenario names
}
\description{
Creates scenario configurations from PKML files by extracting available information
such as applications, output paths, and simulation time settings. This function
allows users to easily add scenarios to an already initialized project without
manually filling in all the details.
}
\details{
This function extracts the following information from PKML files:
\itemize{
\item \strong{Applications}: All application protocols defined in the simulation
\item \strong{Output paths}: All selected outputs for the simulation
\item \strong{Simulation time}: Time intervals with start time, end time, and resolution
\item \strong{Simulation time unit}: Time unit from the output schema intervals (e.g., "h" for hours)
\item \strong{Molecules}: Names of molecules in the simulation
}

The function creates scenario configurations and writes them to the scenarios
Excel file defined in the project configuration. If \code{appendToExisting} is \code{TRUE},
new scenarios will be added to existing ones; otherwise, existing scenarios
will be replaced.
}
\examples{
\dontrun{
# Create default project configuration
projectConfiguration <- createDefaultProjectConfiguration()

# Add scenarios from a single PKML file
pkmlPath <- "path/to/simulation.pkml"
scenarios <- addScenarioFromPKML(
  pkmlFilePaths = pkmlPath,
  projectConfiguration = projectConfiguration
)

# Add scenarios from multiple PKML files with custom names
pkmlPaths <- c("path/to/sim1.pkml", "path/to/sim2.pkml")
scenarios <- addScenarioFromPKML(
  pkmlFilePaths = pkmlPaths,
  projectConfiguration = projectConfiguration,
  scenarioNames = c("Scenario1", "Scenario2")
)
}
}
